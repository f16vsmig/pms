// Code generated by ent, DO NOT EDIT.

package ent

import (
	"context"
	"errors"
	"fmt"
	"gopms/ent/perms"
	"gopms/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"entgo.io/ent/schema/field"
)

// PermsUpdate is the builder for updating Perms entities.
type PermsUpdate struct {
	config
	hooks    []Hook
	mutation *PermsMutation
}

// Where appends a list predicates to the PermsUpdate builder.
func (pu *PermsUpdate) Where(ps ...predicate.Perms) *PermsUpdate {
	pu.mutation.Where(ps...)
	return pu
}

// SetGuyukCd sets the "guyuk_cd" field.
func (pu *PermsUpdate) SetGuyukCd(s string) *PermsUpdate {
	pu.mutation.SetGuyukCd(s)
	return pu
}

// SetNillableGuyukCd sets the "guyuk_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableGuyukCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetGuyukCd(*s)
	}
	return pu
}

// ClearGuyukCd clears the value of the "guyuk_cd" field.
func (pu *PermsUpdate) ClearGuyukCd() *PermsUpdate {
	pu.mutation.ClearGuyukCd()
	return pu
}

// SetGuyukCdNm sets the "guyuk_cd_nm" field.
func (pu *PermsUpdate) SetGuyukCdNm(s string) *PermsUpdate {
	pu.mutation.SetGuyukCdNm(s)
	return pu
}

// SetNillableGuyukCdNm sets the "guyuk_cd_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableGuyukCdNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetGuyukCdNm(*s)
	}
	return pu
}

// ClearGuyukCdNm clears the value of the "guyuk_cd_nm" field.
func (pu *PermsUpdate) ClearGuyukCdNm() *PermsUpdate {
	pu.mutation.ClearGuyukCdNm()
	return pu
}

// SetJimokCd sets the "jimok_cd" field.
func (pu *PermsUpdate) SetJimokCd(s string) *PermsUpdate {
	pu.mutation.SetJimokCd(s)
	return pu
}

// SetNillableJimokCd sets the "jimok_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJimokCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJimokCd(*s)
	}
	return pu
}

// ClearJimokCd clears the value of the "jimok_cd" field.
func (pu *PermsUpdate) ClearJimokCd() *PermsUpdate {
	pu.mutation.ClearJimokCd()
	return pu
}

// SetJimokCdNm sets the "jimok_cd_nm" field.
func (pu *PermsUpdate) SetJimokCdNm(s string) *PermsUpdate {
	pu.mutation.SetJimokCdNm(s)
	return pu
}

// SetNillableJimokCdNm sets the "jimok_cd_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJimokCdNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJimokCdNm(*s)
	}
	return pu
}

// ClearJimokCdNm clears the value of the "jimok_cd_nm" field.
func (pu *PermsUpdate) ClearJimokCdNm() *PermsUpdate {
	pu.mutation.ClearJimokCdNm()
	return pu
}

// SetJiyukCd sets the "jiyuk_cd" field.
func (pu *PermsUpdate) SetJiyukCd(s string) *PermsUpdate {
	pu.mutation.SetJiyukCd(s)
	return pu
}

// SetNillableJiyukCd sets the "jiyuk_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJiyukCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJiyukCd(*s)
	}
	return pu
}

// ClearJiyukCd clears the value of the "jiyuk_cd" field.
func (pu *PermsUpdate) ClearJiyukCd() *PermsUpdate {
	pu.mutation.ClearJiyukCd()
	return pu
}

// SetJiyukCdNm sets the "jiyuk_cd_nm" field.
func (pu *PermsUpdate) SetJiyukCdNm(s string) *PermsUpdate {
	pu.mutation.SetJiyukCdNm(s)
	return pu
}

// SetNillableJiyukCdNm sets the "jiyuk_cd_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJiyukCdNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJiyukCdNm(*s)
	}
	return pu
}

// ClearJiyukCdNm clears the value of the "jiyuk_cd_nm" field.
func (pu *PermsUpdate) ClearJiyukCdNm() *PermsUpdate {
	pu.mutation.ClearJiyukCdNm()
	return pu
}

// SetJiguCd sets the "jigu_cd" field.
func (pu *PermsUpdate) SetJiguCd(s string) *PermsUpdate {
	pu.mutation.SetJiguCd(s)
	return pu
}

// SetNillableJiguCd sets the "jigu_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJiguCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJiguCd(*s)
	}
	return pu
}

// ClearJiguCd clears the value of the "jigu_cd" field.
func (pu *PermsUpdate) ClearJiguCd() *PermsUpdate {
	pu.mutation.ClearJiguCd()
	return pu
}

// SetJiguCdNm sets the "jigu_cd_nm" field.
func (pu *PermsUpdate) SetJiguCdNm(s string) *PermsUpdate {
	pu.mutation.SetJiguCdNm(s)
	return pu
}

// SetNillableJiguCdNm sets the "jigu_cd_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJiguCdNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJiguCdNm(*s)
	}
	return pu
}

// ClearJiguCdNm clears the value of the "jigu_cd_nm" field.
func (pu *PermsUpdate) ClearJiguCdNm() *PermsUpdate {
	pu.mutation.ClearJiguCdNm()
	return pu
}

// SetArchGBCdNm sets the "arch_gb_cd_nm" field.
func (pu *PermsUpdate) SetArchGBCdNm(s string) *PermsUpdate {
	pu.mutation.SetArchGBCdNm(s)
	return pu
}

// SetNillableArchGBCdNm sets the "arch_gb_cd_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableArchGBCdNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetArchGBCdNm(*s)
	}
	return pu
}

// ClearArchGBCdNm clears the value of the "arch_gb_cd_nm" field.
func (pu *PermsUpdate) ClearArchGBCdNm() *PermsUpdate {
	pu.mutation.ClearArchGBCdNm()
	return pu
}

// SetArchGBCd sets the "arch_gb_cd" field.
func (pu *PermsUpdate) SetArchGBCd(s string) *PermsUpdate {
	pu.mutation.SetArchGBCd(s)
	return pu
}

// SetNillableArchGBCd sets the "arch_gb_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableArchGBCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetArchGBCd(*s)
	}
	return pu
}

// ClearArchGBCd clears the value of the "arch_gb_cd" field.
func (pu *PermsUpdate) ClearArchGBCd() *PermsUpdate {
	pu.mutation.ClearArchGBCd()
	return pu
}

// SetPlatArea sets the "plat_area" field.
func (pu *PermsUpdate) SetPlatArea(u uint32) *PermsUpdate {
	pu.mutation.ResetPlatArea()
	pu.mutation.SetPlatArea(u)
	return pu
}

// SetNillablePlatArea sets the "plat_area" field if the given value is not nil.
func (pu *PermsUpdate) SetNillablePlatArea(u *uint32) *PermsUpdate {
	if u != nil {
		pu.SetPlatArea(*u)
	}
	return pu
}

// AddPlatArea adds u to the "plat_area" field.
func (pu *PermsUpdate) AddPlatArea(u int32) *PermsUpdate {
	pu.mutation.AddPlatArea(u)
	return pu
}

// ClearPlatArea clears the value of the "plat_area" field.
func (pu *PermsUpdate) ClearPlatArea() *PermsUpdate {
	pu.mutation.ClearPlatArea()
	return pu
}

// SetArchArea sets the "arch_area" field.
func (pu *PermsUpdate) SetArchArea(u uint32) *PermsUpdate {
	pu.mutation.ResetArchArea()
	pu.mutation.SetArchArea(u)
	return pu
}

// SetNillableArchArea sets the "arch_area" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableArchArea(u *uint32) *PermsUpdate {
	if u != nil {
		pu.SetArchArea(*u)
	}
	return pu
}

// AddArchArea adds u to the "arch_area" field.
func (pu *PermsUpdate) AddArchArea(u int32) *PermsUpdate {
	pu.mutation.AddArchArea(u)
	return pu
}

// ClearArchArea clears the value of the "arch_area" field.
func (pu *PermsUpdate) ClearArchArea() *PermsUpdate {
	pu.mutation.ClearArchArea()
	return pu
}

// SetBcRat sets the "bc_rat" field.
func (pu *PermsUpdate) SetBcRat(u uint16) *PermsUpdate {
	pu.mutation.ResetBcRat()
	pu.mutation.SetBcRat(u)
	return pu
}

// SetNillableBcRat sets the "bc_rat" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableBcRat(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetBcRat(*u)
	}
	return pu
}

// AddBcRat adds u to the "bc_rat" field.
func (pu *PermsUpdate) AddBcRat(u int16) *PermsUpdate {
	pu.mutation.AddBcRat(u)
	return pu
}

// ClearBcRat clears the value of the "bc_rat" field.
func (pu *PermsUpdate) ClearBcRat() *PermsUpdate {
	pu.mutation.ClearBcRat()
	return pu
}

// SetTotArea sets the "tot_area" field.
func (pu *PermsUpdate) SetTotArea(u uint32) *PermsUpdate {
	pu.mutation.ResetTotArea()
	pu.mutation.SetTotArea(u)
	return pu
}

// SetNillableTotArea sets the "tot_area" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableTotArea(u *uint32) *PermsUpdate {
	if u != nil {
		pu.SetTotArea(*u)
	}
	return pu
}

// AddTotArea adds u to the "tot_area" field.
func (pu *PermsUpdate) AddTotArea(u int32) *PermsUpdate {
	pu.mutation.AddTotArea(u)
	return pu
}

// ClearTotArea clears the value of the "tot_area" field.
func (pu *PermsUpdate) ClearTotArea() *PermsUpdate {
	pu.mutation.ClearTotArea()
	return pu
}

// SetVlRatEstmTotArea sets the "vl_rat_estm_tot_area" field.
func (pu *PermsUpdate) SetVlRatEstmTotArea(u uint32) *PermsUpdate {
	pu.mutation.ResetVlRatEstmTotArea()
	pu.mutation.SetVlRatEstmTotArea(u)
	return pu
}

// SetNillableVlRatEstmTotArea sets the "vl_rat_estm_tot_area" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableVlRatEstmTotArea(u *uint32) *PermsUpdate {
	if u != nil {
		pu.SetVlRatEstmTotArea(*u)
	}
	return pu
}

// AddVlRatEstmTotArea adds u to the "vl_rat_estm_tot_area" field.
func (pu *PermsUpdate) AddVlRatEstmTotArea(u int32) *PermsUpdate {
	pu.mutation.AddVlRatEstmTotArea(u)
	return pu
}

// ClearVlRatEstmTotArea clears the value of the "vl_rat_estm_tot_area" field.
func (pu *PermsUpdate) ClearVlRatEstmTotArea() *PermsUpdate {
	pu.mutation.ClearVlRatEstmTotArea()
	return pu
}

// SetVlRat sets the "vl_rat" field.
func (pu *PermsUpdate) SetVlRat(u uint16) *PermsUpdate {
	pu.mutation.ResetVlRat()
	pu.mutation.SetVlRat(u)
	return pu
}

// SetNillableVlRat sets the "vl_rat" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableVlRat(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetVlRat(*u)
	}
	return pu
}

// AddVlRat adds u to the "vl_rat" field.
func (pu *PermsUpdate) AddVlRat(u int16) *PermsUpdate {
	pu.mutation.AddVlRat(u)
	return pu
}

// ClearVlRat clears the value of the "vl_rat" field.
func (pu *PermsUpdate) ClearVlRat() *PermsUpdate {
	pu.mutation.ClearVlRat()
	return pu
}

// SetMainBldCnt sets the "main_bld_cnt" field.
func (pu *PermsUpdate) SetMainBldCnt(u uint16) *PermsUpdate {
	pu.mutation.ResetMainBldCnt()
	pu.mutation.SetMainBldCnt(u)
	return pu
}

// SetNillableMainBldCnt sets the "main_bld_cnt" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableMainBldCnt(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetMainBldCnt(*u)
	}
	return pu
}

// AddMainBldCnt adds u to the "main_bld_cnt" field.
func (pu *PermsUpdate) AddMainBldCnt(u int16) *PermsUpdate {
	pu.mutation.AddMainBldCnt(u)
	return pu
}

// ClearMainBldCnt clears the value of the "main_bld_cnt" field.
func (pu *PermsUpdate) ClearMainBldCnt() *PermsUpdate {
	pu.mutation.ClearMainBldCnt()
	return pu
}

// SetAtchBldDongCnt sets the "atch_bld_dong_cnt" field.
func (pu *PermsUpdate) SetAtchBldDongCnt(u uint16) *PermsUpdate {
	pu.mutation.ResetAtchBldDongCnt()
	pu.mutation.SetAtchBldDongCnt(u)
	return pu
}

// SetNillableAtchBldDongCnt sets the "atch_bld_dong_cnt" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableAtchBldDongCnt(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetAtchBldDongCnt(*u)
	}
	return pu
}

// AddAtchBldDongCnt adds u to the "atch_bld_dong_cnt" field.
func (pu *PermsUpdate) AddAtchBldDongCnt(u int16) *PermsUpdate {
	pu.mutation.AddAtchBldDongCnt(u)
	return pu
}

// ClearAtchBldDongCnt clears the value of the "atch_bld_dong_cnt" field.
func (pu *PermsUpdate) ClearAtchBldDongCnt() *PermsUpdate {
	pu.mutation.ClearAtchBldDongCnt()
	return pu
}

// SetMainPurpsCd sets the "main_purps_cd" field.
func (pu *PermsUpdate) SetMainPurpsCd(s string) *PermsUpdate {
	pu.mutation.SetMainPurpsCd(s)
	return pu
}

// SetNillableMainPurpsCd sets the "main_purps_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableMainPurpsCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetMainPurpsCd(*s)
	}
	return pu
}

// ClearMainPurpsCd clears the value of the "main_purps_cd" field.
func (pu *PermsUpdate) ClearMainPurpsCd() *PermsUpdate {
	pu.mutation.ClearMainPurpsCd()
	return pu
}

// SetMainPurpsCdNm sets the "main_purps_cd_nm" field.
func (pu *PermsUpdate) SetMainPurpsCdNm(s string) *PermsUpdate {
	pu.mutation.SetMainPurpsCdNm(s)
	return pu
}

// SetNillableMainPurpsCdNm sets the "main_purps_cd_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableMainPurpsCdNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetMainPurpsCdNm(*s)
	}
	return pu
}

// ClearMainPurpsCdNm clears the value of the "main_purps_cd_nm" field.
func (pu *PermsUpdate) ClearMainPurpsCdNm() *PermsUpdate {
	pu.mutation.ClearMainPurpsCdNm()
	return pu
}

// SetHhldCnt sets the "hhld_cnt" field.
func (pu *PermsUpdate) SetHhldCnt(u uint16) *PermsUpdate {
	pu.mutation.ResetHhldCnt()
	pu.mutation.SetHhldCnt(u)
	return pu
}

// SetNillableHhldCnt sets the "hhld_cnt" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableHhldCnt(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetHhldCnt(*u)
	}
	return pu
}

// AddHhldCnt adds u to the "hhld_cnt" field.
func (pu *PermsUpdate) AddHhldCnt(u int16) *PermsUpdate {
	pu.mutation.AddHhldCnt(u)
	return pu
}

// ClearHhldCnt clears the value of the "hhld_cnt" field.
func (pu *PermsUpdate) ClearHhldCnt() *PermsUpdate {
	pu.mutation.ClearHhldCnt()
	return pu
}

// SetHoCnt sets the "ho_cnt" field.
func (pu *PermsUpdate) SetHoCnt(u uint16) *PermsUpdate {
	pu.mutation.ResetHoCnt()
	pu.mutation.SetHoCnt(u)
	return pu
}

// SetNillableHoCnt sets the "ho_cnt" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableHoCnt(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetHoCnt(*u)
	}
	return pu
}

// AddHoCnt adds u to the "ho_cnt" field.
func (pu *PermsUpdate) AddHoCnt(u int16) *PermsUpdate {
	pu.mutation.AddHoCnt(u)
	return pu
}

// ClearHoCnt clears the value of the "ho_cnt" field.
func (pu *PermsUpdate) ClearHoCnt() *PermsUpdate {
	pu.mutation.ClearHoCnt()
	return pu
}

// SetFmlyCnt sets the "fmly_cnt" field.
func (pu *PermsUpdate) SetFmlyCnt(u uint16) *PermsUpdate {
	pu.mutation.ResetFmlyCnt()
	pu.mutation.SetFmlyCnt(u)
	return pu
}

// SetNillableFmlyCnt sets the "fmly_cnt" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableFmlyCnt(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetFmlyCnt(*u)
	}
	return pu
}

// AddFmlyCnt adds u to the "fmly_cnt" field.
func (pu *PermsUpdate) AddFmlyCnt(u int16) *PermsUpdate {
	pu.mutation.AddFmlyCnt(u)
	return pu
}

// ClearFmlyCnt clears the value of the "fmly_cnt" field.
func (pu *PermsUpdate) ClearFmlyCnt() *PermsUpdate {
	pu.mutation.ClearFmlyCnt()
	return pu
}

// SetTotPkngCnt sets the "tot_pkng_cnt" field.
func (pu *PermsUpdate) SetTotPkngCnt(u uint16) *PermsUpdate {
	pu.mutation.ResetTotPkngCnt()
	pu.mutation.SetTotPkngCnt(u)
	return pu
}

// SetNillableTotPkngCnt sets the "tot_pkng_cnt" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableTotPkngCnt(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetTotPkngCnt(*u)
	}
	return pu
}

// AddTotPkngCnt adds u to the "tot_pkng_cnt" field.
func (pu *PermsUpdate) AddTotPkngCnt(u int16) *PermsUpdate {
	pu.mutation.AddTotPkngCnt(u)
	return pu
}

// ClearTotPkngCnt clears the value of the "tot_pkng_cnt" field.
func (pu *PermsUpdate) ClearTotPkngCnt() *PermsUpdate {
	pu.mutation.ClearTotPkngCnt()
	return pu
}

// SetStcnsSchedDay sets the "stcns_sched_day" field.
func (pu *PermsUpdate) SetStcnsSchedDay(s string) *PermsUpdate {
	pu.mutation.SetStcnsSchedDay(s)
	return pu
}

// SetNillableStcnsSchedDay sets the "stcns_sched_day" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableStcnsSchedDay(s *string) *PermsUpdate {
	if s != nil {
		pu.SetStcnsSchedDay(*s)
	}
	return pu
}

// ClearStcnsSchedDay clears the value of the "stcns_sched_day" field.
func (pu *PermsUpdate) ClearStcnsSchedDay() *PermsUpdate {
	pu.mutation.ClearStcnsSchedDay()
	return pu
}

// SetStcnsDelayDay sets the "stcns_delay_day" field.
func (pu *PermsUpdate) SetStcnsDelayDay(s string) *PermsUpdate {
	pu.mutation.SetStcnsDelayDay(s)
	return pu
}

// SetNillableStcnsDelayDay sets the "stcns_delay_day" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableStcnsDelayDay(s *string) *PermsUpdate {
	if s != nil {
		pu.SetStcnsDelayDay(*s)
	}
	return pu
}

// ClearStcnsDelayDay clears the value of the "stcns_delay_day" field.
func (pu *PermsUpdate) ClearStcnsDelayDay() *PermsUpdate {
	pu.mutation.ClearStcnsDelayDay()
	return pu
}

// SetRealStcnsDay sets the "real_stcns_day" field.
func (pu *PermsUpdate) SetRealStcnsDay(s string) *PermsUpdate {
	pu.mutation.SetRealStcnsDay(s)
	return pu
}

// SetNillableRealStcnsDay sets the "real_stcns_day" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableRealStcnsDay(s *string) *PermsUpdate {
	if s != nil {
		pu.SetRealStcnsDay(*s)
	}
	return pu
}

// ClearRealStcnsDay clears the value of the "real_stcns_day" field.
func (pu *PermsUpdate) ClearRealStcnsDay() *PermsUpdate {
	pu.mutation.ClearRealStcnsDay()
	return pu
}

// SetArchPmsDay sets the "arch_pms_day" field.
func (pu *PermsUpdate) SetArchPmsDay(s string) *PermsUpdate {
	pu.mutation.SetArchPmsDay(s)
	return pu
}

// SetNillableArchPmsDay sets the "arch_pms_day" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableArchPmsDay(s *string) *PermsUpdate {
	if s != nil {
		pu.SetArchPmsDay(*s)
	}
	return pu
}

// ClearArchPmsDay clears the value of the "arch_pms_day" field.
func (pu *PermsUpdate) ClearArchPmsDay() *PermsUpdate {
	pu.mutation.ClearArchPmsDay()
	return pu
}

// SetUseAprDay sets the "use_apr_day" field.
func (pu *PermsUpdate) SetUseAprDay(s string) *PermsUpdate {
	pu.mutation.SetUseAprDay(s)
	return pu
}

// SetNillableUseAprDay sets the "use_apr_day" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableUseAprDay(s *string) *PermsUpdate {
	if s != nil {
		pu.SetUseAprDay(*s)
	}
	return pu
}

// ClearUseAprDay clears the value of the "use_apr_day" field.
func (pu *PermsUpdate) ClearUseAprDay() *PermsUpdate {
	pu.mutation.ClearUseAprDay()
	return pu
}

// SetPlatPlc sets the "plat_plc" field.
func (pu *PermsUpdate) SetPlatPlc(s string) *PermsUpdate {
	pu.mutation.SetPlatPlc(s)
	return pu
}

// SetNillablePlatPlc sets the "plat_plc" field if the given value is not nil.
func (pu *PermsUpdate) SetNillablePlatPlc(s *string) *PermsUpdate {
	if s != nil {
		pu.SetPlatPlc(*s)
	}
	return pu
}

// ClearPlatPlc clears the value of the "plat_plc" field.
func (pu *PermsUpdate) ClearPlatPlc() *PermsUpdate {
	pu.mutation.ClearPlatPlc()
	return pu
}

// SetSigunguCd sets the "sigungu_cd" field.
func (pu *PermsUpdate) SetSigunguCd(s string) *PermsUpdate {
	pu.mutation.SetSigunguCd(s)
	return pu
}

// SetNillableSigunguCd sets the "sigungu_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableSigunguCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetSigunguCd(*s)
	}
	return pu
}

// ClearSigunguCd clears the value of the "sigungu_cd" field.
func (pu *PermsUpdate) ClearSigunguCd() *PermsUpdate {
	pu.mutation.ClearSigunguCd()
	return pu
}

// SetBjdongCd sets the "bjdong_cd" field.
func (pu *PermsUpdate) SetBjdongCd(s string) *PermsUpdate {
	pu.mutation.SetBjdongCd(s)
	return pu
}

// SetNillableBjdongCd sets the "bjdong_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableBjdongCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetBjdongCd(*s)
	}
	return pu
}

// ClearBjdongCd clears the value of the "bjdong_cd" field.
func (pu *PermsUpdate) ClearBjdongCd() *PermsUpdate {
	pu.mutation.ClearBjdongCd()
	return pu
}

// SetPlatGBCd sets the "plat_gb_cd" field.
func (pu *PermsUpdate) SetPlatGBCd(s string) *PermsUpdate {
	pu.mutation.SetPlatGBCd(s)
	return pu
}

// SetNillablePlatGBCd sets the "plat_gb_cd" field if the given value is not nil.
func (pu *PermsUpdate) SetNillablePlatGBCd(s *string) *PermsUpdate {
	if s != nil {
		pu.SetPlatGBCd(*s)
	}
	return pu
}

// ClearPlatGBCd clears the value of the "plat_gb_cd" field.
func (pu *PermsUpdate) ClearPlatGBCd() *PermsUpdate {
	pu.mutation.ClearPlatGBCd()
	return pu
}

// SetBun sets the "bun" field.
func (pu *PermsUpdate) SetBun(s string) *PermsUpdate {
	pu.mutation.SetBun(s)
	return pu
}

// SetNillableBun sets the "bun" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableBun(s *string) *PermsUpdate {
	if s != nil {
		pu.SetBun(*s)
	}
	return pu
}

// ClearBun clears the value of the "bun" field.
func (pu *PermsUpdate) ClearBun() *PermsUpdate {
	pu.mutation.ClearBun()
	return pu
}

// SetJi sets the "ji" field.
func (pu *PermsUpdate) SetJi(s string) *PermsUpdate {
	pu.mutation.SetJi(s)
	return pu
}

// SetNillableJi sets the "ji" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableJi(s *string) *PermsUpdate {
	if s != nil {
		pu.SetJi(*s)
	}
	return pu
}

// ClearJi clears the value of the "ji" field.
func (pu *PermsUpdate) ClearJi() *PermsUpdate {
	pu.mutation.ClearJi()
	return pu
}

// SetMgmPmsrgstPk sets the "mgm_pmsrgst_pk" field.
func (pu *PermsUpdate) SetMgmPmsrgstPk(s string) *PermsUpdate {
	pu.mutation.SetMgmPmsrgstPk(s)
	return pu
}

// SetSplotNm sets the "splot_nm" field.
func (pu *PermsUpdate) SetSplotNm(s string) *PermsUpdate {
	pu.mutation.SetSplotNm(s)
	return pu
}

// SetNillableSplotNm sets the "splot_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableSplotNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetSplotNm(*s)
	}
	return pu
}

// ClearSplotNm clears the value of the "splot_nm" field.
func (pu *PermsUpdate) ClearSplotNm() *PermsUpdate {
	pu.mutation.ClearSplotNm()
	return pu
}

// SetBlock sets the "block" field.
func (pu *PermsUpdate) SetBlock(s string) *PermsUpdate {
	pu.mutation.SetBlock(s)
	return pu
}

// SetNillableBlock sets the "block" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableBlock(s *string) *PermsUpdate {
	if s != nil {
		pu.SetBlock(*s)
	}
	return pu
}

// ClearBlock clears the value of the "block" field.
func (pu *PermsUpdate) ClearBlock() *PermsUpdate {
	pu.mutation.ClearBlock()
	return pu
}

// SetLot sets the "lot" field.
func (pu *PermsUpdate) SetLot(s string) *PermsUpdate {
	pu.mutation.SetLot(s)
	return pu
}

// SetNillableLot sets the "lot" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableLot(s *string) *PermsUpdate {
	if s != nil {
		pu.SetLot(*s)
	}
	return pu
}

// ClearLot clears the value of the "lot" field.
func (pu *PermsUpdate) ClearLot() *PermsUpdate {
	pu.mutation.ClearLot()
	return pu
}

// SetCrtnDay sets the "crtn_day" field.
func (pu *PermsUpdate) SetCrtnDay(s string) *PermsUpdate {
	pu.mutation.SetCrtnDay(s)
	return pu
}

// SetNillableCrtnDay sets the "crtn_day" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableCrtnDay(s *string) *PermsUpdate {
	if s != nil {
		pu.SetCrtnDay(*s)
	}
	return pu
}

// ClearCrtnDay clears the value of the "crtn_day" field.
func (pu *PermsUpdate) ClearCrtnDay() *PermsUpdate {
	pu.mutation.ClearCrtnDay()
	return pu
}

// SetRnum sets the "rnum" field.
func (pu *PermsUpdate) SetRnum(u uint16) *PermsUpdate {
	pu.mutation.ResetRnum()
	pu.mutation.SetRnum(u)
	return pu
}

// SetNillableRnum sets the "rnum" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableRnum(u *uint16) *PermsUpdate {
	if u != nil {
		pu.SetRnum(*u)
	}
	return pu
}

// AddRnum adds u to the "rnum" field.
func (pu *PermsUpdate) AddRnum(u int16) *PermsUpdate {
	pu.mutation.AddRnum(u)
	return pu
}

// ClearRnum clears the value of the "rnum" field.
func (pu *PermsUpdate) ClearRnum() *PermsUpdate {
	pu.mutation.ClearRnum()
	return pu
}

// SetBldNm sets the "bld_nm" field.
func (pu *PermsUpdate) SetBldNm(s string) *PermsUpdate {
	pu.mutation.SetBldNm(s)
	return pu
}

// SetNillableBldNm sets the "bld_nm" field if the given value is not nil.
func (pu *PermsUpdate) SetNillableBldNm(s *string) *PermsUpdate {
	if s != nil {
		pu.SetBldNm(*s)
	}
	return pu
}

// ClearBldNm clears the value of the "bld_nm" field.
func (pu *PermsUpdate) ClearBldNm() *PermsUpdate {
	pu.mutation.ClearBldNm()
	return pu
}

// SetUpdatedAt sets the "updated_at" field.
func (pu *PermsUpdate) SetUpdatedAt(t time.Time) *PermsUpdate {
	pu.mutation.SetUpdatedAt(t)
	return pu
}

// Mutation returns the PermsMutation object of the builder.
func (pu *PermsUpdate) Mutation() *PermsMutation {
	return pu.mutation
}

// Save executes the query and returns the number of nodes affected by the update operation.
func (pu *PermsUpdate) Save(ctx context.Context) (int, error) {
	pu.defaults()
	return withHooks[int, PermsMutation](ctx, pu.sqlSave, pu.mutation, pu.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (pu *PermsUpdate) SaveX(ctx context.Context) int {
	affected, err := pu.Save(ctx)
	if err != nil {
		panic(err)
	}
	return affected
}

// Exec executes the query.
func (pu *PermsUpdate) Exec(ctx context.Context) error {
	_, err := pu.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (pu *PermsUpdate) ExecX(ctx context.Context) {
	if err := pu.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (pu *PermsUpdate) defaults() {
	if _, ok := pu.mutation.UpdatedAt(); !ok {
		v := perms.UpdateDefaultUpdatedAt()
		pu.mutation.SetUpdatedAt(v)
	}
}

func (pu *PermsUpdate) sqlSave(ctx context.Context) (n int, err error) {
	_spec := sqlgraph.NewUpdateSpec(perms.Table, perms.Columns, sqlgraph.NewFieldSpec(perms.FieldID, field.TypeInt))
	if ps := pu.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := pu.mutation.GuyukCd(); ok {
		_spec.SetField(perms.FieldGuyukCd, field.TypeString, value)
	}
	if pu.mutation.GuyukCdCleared() {
		_spec.ClearField(perms.FieldGuyukCd, field.TypeString)
	}
	if value, ok := pu.mutation.GuyukCdNm(); ok {
		_spec.SetField(perms.FieldGuyukCdNm, field.TypeString, value)
	}
	if pu.mutation.GuyukCdNmCleared() {
		_spec.ClearField(perms.FieldGuyukCdNm, field.TypeString)
	}
	if value, ok := pu.mutation.JimokCd(); ok {
		_spec.SetField(perms.FieldJimokCd, field.TypeString, value)
	}
	if pu.mutation.JimokCdCleared() {
		_spec.ClearField(perms.FieldJimokCd, field.TypeString)
	}
	if value, ok := pu.mutation.JimokCdNm(); ok {
		_spec.SetField(perms.FieldJimokCdNm, field.TypeString, value)
	}
	if pu.mutation.JimokCdNmCleared() {
		_spec.ClearField(perms.FieldJimokCdNm, field.TypeString)
	}
	if value, ok := pu.mutation.JiyukCd(); ok {
		_spec.SetField(perms.FieldJiyukCd, field.TypeString, value)
	}
	if pu.mutation.JiyukCdCleared() {
		_spec.ClearField(perms.FieldJiyukCd, field.TypeString)
	}
	if value, ok := pu.mutation.JiyukCdNm(); ok {
		_spec.SetField(perms.FieldJiyukCdNm, field.TypeString, value)
	}
	if pu.mutation.JiyukCdNmCleared() {
		_spec.ClearField(perms.FieldJiyukCdNm, field.TypeString)
	}
	if value, ok := pu.mutation.JiguCd(); ok {
		_spec.SetField(perms.FieldJiguCd, field.TypeString, value)
	}
	if pu.mutation.JiguCdCleared() {
		_spec.ClearField(perms.FieldJiguCd, field.TypeString)
	}
	if value, ok := pu.mutation.JiguCdNm(); ok {
		_spec.SetField(perms.FieldJiguCdNm, field.TypeString, value)
	}
	if pu.mutation.JiguCdNmCleared() {
		_spec.ClearField(perms.FieldJiguCdNm, field.TypeString)
	}
	if value, ok := pu.mutation.ArchGBCdNm(); ok {
		_spec.SetField(perms.FieldArchGBCdNm, field.TypeString, value)
	}
	if pu.mutation.ArchGBCdNmCleared() {
		_spec.ClearField(perms.FieldArchGBCdNm, field.TypeString)
	}
	if value, ok := pu.mutation.ArchGBCd(); ok {
		_spec.SetField(perms.FieldArchGBCd, field.TypeString, value)
	}
	if pu.mutation.ArchGBCdCleared() {
		_spec.ClearField(perms.FieldArchGBCd, field.TypeString)
	}
	if value, ok := pu.mutation.PlatArea(); ok {
		_spec.SetField(perms.FieldPlatArea, field.TypeUint32, value)
	}
	if value, ok := pu.mutation.AddedPlatArea(); ok {
		_spec.AddField(perms.FieldPlatArea, field.TypeUint32, value)
	}
	if pu.mutation.PlatAreaCleared() {
		_spec.ClearField(perms.FieldPlatArea, field.TypeUint32)
	}
	if value, ok := pu.mutation.ArchArea(); ok {
		_spec.SetField(perms.FieldArchArea, field.TypeUint32, value)
	}
	if value, ok := pu.mutation.AddedArchArea(); ok {
		_spec.AddField(perms.FieldArchArea, field.TypeUint32, value)
	}
	if pu.mutation.ArchAreaCleared() {
		_spec.ClearField(perms.FieldArchArea, field.TypeUint32)
	}
	if value, ok := pu.mutation.BcRat(); ok {
		_spec.SetField(perms.FieldBcRat, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedBcRat(); ok {
		_spec.AddField(perms.FieldBcRat, field.TypeUint16, value)
	}
	if pu.mutation.BcRatCleared() {
		_spec.ClearField(perms.FieldBcRat, field.TypeUint16)
	}
	if value, ok := pu.mutation.TotArea(); ok {
		_spec.SetField(perms.FieldTotArea, field.TypeUint32, value)
	}
	if value, ok := pu.mutation.AddedTotArea(); ok {
		_spec.AddField(perms.FieldTotArea, field.TypeUint32, value)
	}
	if pu.mutation.TotAreaCleared() {
		_spec.ClearField(perms.FieldTotArea, field.TypeUint32)
	}
	if value, ok := pu.mutation.VlRatEstmTotArea(); ok {
		_spec.SetField(perms.FieldVlRatEstmTotArea, field.TypeUint32, value)
	}
	if value, ok := pu.mutation.AddedVlRatEstmTotArea(); ok {
		_spec.AddField(perms.FieldVlRatEstmTotArea, field.TypeUint32, value)
	}
	if pu.mutation.VlRatEstmTotAreaCleared() {
		_spec.ClearField(perms.FieldVlRatEstmTotArea, field.TypeUint32)
	}
	if value, ok := pu.mutation.VlRat(); ok {
		_spec.SetField(perms.FieldVlRat, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedVlRat(); ok {
		_spec.AddField(perms.FieldVlRat, field.TypeUint16, value)
	}
	if pu.mutation.VlRatCleared() {
		_spec.ClearField(perms.FieldVlRat, field.TypeUint16)
	}
	if value, ok := pu.mutation.MainBldCnt(); ok {
		_spec.SetField(perms.FieldMainBldCnt, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedMainBldCnt(); ok {
		_spec.AddField(perms.FieldMainBldCnt, field.TypeUint16, value)
	}
	if pu.mutation.MainBldCntCleared() {
		_spec.ClearField(perms.FieldMainBldCnt, field.TypeUint16)
	}
	if value, ok := pu.mutation.AtchBldDongCnt(); ok {
		_spec.SetField(perms.FieldAtchBldDongCnt, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedAtchBldDongCnt(); ok {
		_spec.AddField(perms.FieldAtchBldDongCnt, field.TypeUint16, value)
	}
	if pu.mutation.AtchBldDongCntCleared() {
		_spec.ClearField(perms.FieldAtchBldDongCnt, field.TypeUint16)
	}
	if value, ok := pu.mutation.MainPurpsCd(); ok {
		_spec.SetField(perms.FieldMainPurpsCd, field.TypeString, value)
	}
	if pu.mutation.MainPurpsCdCleared() {
		_spec.ClearField(perms.FieldMainPurpsCd, field.TypeString)
	}
	if value, ok := pu.mutation.MainPurpsCdNm(); ok {
		_spec.SetField(perms.FieldMainPurpsCdNm, field.TypeString, value)
	}
	if pu.mutation.MainPurpsCdNmCleared() {
		_spec.ClearField(perms.FieldMainPurpsCdNm, field.TypeString)
	}
	if value, ok := pu.mutation.HhldCnt(); ok {
		_spec.SetField(perms.FieldHhldCnt, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedHhldCnt(); ok {
		_spec.AddField(perms.FieldHhldCnt, field.TypeUint16, value)
	}
	if pu.mutation.HhldCntCleared() {
		_spec.ClearField(perms.FieldHhldCnt, field.TypeUint16)
	}
	if value, ok := pu.mutation.HoCnt(); ok {
		_spec.SetField(perms.FieldHoCnt, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedHoCnt(); ok {
		_spec.AddField(perms.FieldHoCnt, field.TypeUint16, value)
	}
	if pu.mutation.HoCntCleared() {
		_spec.ClearField(perms.FieldHoCnt, field.TypeUint16)
	}
	if value, ok := pu.mutation.FmlyCnt(); ok {
		_spec.SetField(perms.FieldFmlyCnt, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedFmlyCnt(); ok {
		_spec.AddField(perms.FieldFmlyCnt, field.TypeUint16, value)
	}
	if pu.mutation.FmlyCntCleared() {
		_spec.ClearField(perms.FieldFmlyCnt, field.TypeUint16)
	}
	if value, ok := pu.mutation.TotPkngCnt(); ok {
		_spec.SetField(perms.FieldTotPkngCnt, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedTotPkngCnt(); ok {
		_spec.AddField(perms.FieldTotPkngCnt, field.TypeUint16, value)
	}
	if pu.mutation.TotPkngCntCleared() {
		_spec.ClearField(perms.FieldTotPkngCnt, field.TypeUint16)
	}
	if value, ok := pu.mutation.StcnsSchedDay(); ok {
		_spec.SetField(perms.FieldStcnsSchedDay, field.TypeString, value)
	}
	if pu.mutation.StcnsSchedDayCleared() {
		_spec.ClearField(perms.FieldStcnsSchedDay, field.TypeString)
	}
	if value, ok := pu.mutation.StcnsDelayDay(); ok {
		_spec.SetField(perms.FieldStcnsDelayDay, field.TypeString, value)
	}
	if pu.mutation.StcnsDelayDayCleared() {
		_spec.ClearField(perms.FieldStcnsDelayDay, field.TypeString)
	}
	if value, ok := pu.mutation.RealStcnsDay(); ok {
		_spec.SetField(perms.FieldRealStcnsDay, field.TypeString, value)
	}
	if pu.mutation.RealStcnsDayCleared() {
		_spec.ClearField(perms.FieldRealStcnsDay, field.TypeString)
	}
	if value, ok := pu.mutation.ArchPmsDay(); ok {
		_spec.SetField(perms.FieldArchPmsDay, field.TypeString, value)
	}
	if pu.mutation.ArchPmsDayCleared() {
		_spec.ClearField(perms.FieldArchPmsDay, field.TypeString)
	}
	if value, ok := pu.mutation.UseAprDay(); ok {
		_spec.SetField(perms.FieldUseAprDay, field.TypeString, value)
	}
	if pu.mutation.UseAprDayCleared() {
		_spec.ClearField(perms.FieldUseAprDay, field.TypeString)
	}
	if value, ok := pu.mutation.PlatPlc(); ok {
		_spec.SetField(perms.FieldPlatPlc, field.TypeString, value)
	}
	if pu.mutation.PlatPlcCleared() {
		_spec.ClearField(perms.FieldPlatPlc, field.TypeString)
	}
	if value, ok := pu.mutation.SigunguCd(); ok {
		_spec.SetField(perms.FieldSigunguCd, field.TypeString, value)
	}
	if pu.mutation.SigunguCdCleared() {
		_spec.ClearField(perms.FieldSigunguCd, field.TypeString)
	}
	if value, ok := pu.mutation.BjdongCd(); ok {
		_spec.SetField(perms.FieldBjdongCd, field.TypeString, value)
	}
	if pu.mutation.BjdongCdCleared() {
		_spec.ClearField(perms.FieldBjdongCd, field.TypeString)
	}
	if value, ok := pu.mutation.PlatGBCd(); ok {
		_spec.SetField(perms.FieldPlatGBCd, field.TypeString, value)
	}
	if pu.mutation.PlatGBCdCleared() {
		_spec.ClearField(perms.FieldPlatGBCd, field.TypeString)
	}
	if value, ok := pu.mutation.Bun(); ok {
		_spec.SetField(perms.FieldBun, field.TypeString, value)
	}
	if pu.mutation.BunCleared() {
		_spec.ClearField(perms.FieldBun, field.TypeString)
	}
	if value, ok := pu.mutation.Ji(); ok {
		_spec.SetField(perms.FieldJi, field.TypeString, value)
	}
	if pu.mutation.JiCleared() {
		_spec.ClearField(perms.FieldJi, field.TypeString)
	}
	if value, ok := pu.mutation.MgmPmsrgstPk(); ok {
		_spec.SetField(perms.FieldMgmPmsrgstPk, field.TypeString, value)
	}
	if value, ok := pu.mutation.SplotNm(); ok {
		_spec.SetField(perms.FieldSplotNm, field.TypeString, value)
	}
	if pu.mutation.SplotNmCleared() {
		_spec.ClearField(perms.FieldSplotNm, field.TypeString)
	}
	if value, ok := pu.mutation.Block(); ok {
		_spec.SetField(perms.FieldBlock, field.TypeString, value)
	}
	if pu.mutation.BlockCleared() {
		_spec.ClearField(perms.FieldBlock, field.TypeString)
	}
	if value, ok := pu.mutation.Lot(); ok {
		_spec.SetField(perms.FieldLot, field.TypeString, value)
	}
	if pu.mutation.LotCleared() {
		_spec.ClearField(perms.FieldLot, field.TypeString)
	}
	if value, ok := pu.mutation.CrtnDay(); ok {
		_spec.SetField(perms.FieldCrtnDay, field.TypeString, value)
	}
	if pu.mutation.CrtnDayCleared() {
		_spec.ClearField(perms.FieldCrtnDay, field.TypeString)
	}
	if value, ok := pu.mutation.Rnum(); ok {
		_spec.SetField(perms.FieldRnum, field.TypeUint16, value)
	}
	if value, ok := pu.mutation.AddedRnum(); ok {
		_spec.AddField(perms.FieldRnum, field.TypeUint16, value)
	}
	if pu.mutation.RnumCleared() {
		_spec.ClearField(perms.FieldRnum, field.TypeUint16)
	}
	if value, ok := pu.mutation.BldNm(); ok {
		_spec.SetField(perms.FieldBldNm, field.TypeString, value)
	}
	if pu.mutation.BldNmCleared() {
		_spec.ClearField(perms.FieldBldNm, field.TypeString)
	}
	if value, ok := pu.mutation.UpdatedAt(); ok {
		_spec.SetField(perms.FieldUpdatedAt, field.TypeTime, value)
	}
	if n, err = sqlgraph.UpdateNodes(ctx, pu.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{perms.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return 0, err
	}
	pu.mutation.done = true
	return n, nil
}

// PermsUpdateOne is the builder for updating a single Perms entity.
type PermsUpdateOne struct {
	config
	fields   []string
	hooks    []Hook
	mutation *PermsMutation
}

// SetGuyukCd sets the "guyuk_cd" field.
func (puo *PermsUpdateOne) SetGuyukCd(s string) *PermsUpdateOne {
	puo.mutation.SetGuyukCd(s)
	return puo
}

// SetNillableGuyukCd sets the "guyuk_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableGuyukCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetGuyukCd(*s)
	}
	return puo
}

// ClearGuyukCd clears the value of the "guyuk_cd" field.
func (puo *PermsUpdateOne) ClearGuyukCd() *PermsUpdateOne {
	puo.mutation.ClearGuyukCd()
	return puo
}

// SetGuyukCdNm sets the "guyuk_cd_nm" field.
func (puo *PermsUpdateOne) SetGuyukCdNm(s string) *PermsUpdateOne {
	puo.mutation.SetGuyukCdNm(s)
	return puo
}

// SetNillableGuyukCdNm sets the "guyuk_cd_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableGuyukCdNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetGuyukCdNm(*s)
	}
	return puo
}

// ClearGuyukCdNm clears the value of the "guyuk_cd_nm" field.
func (puo *PermsUpdateOne) ClearGuyukCdNm() *PermsUpdateOne {
	puo.mutation.ClearGuyukCdNm()
	return puo
}

// SetJimokCd sets the "jimok_cd" field.
func (puo *PermsUpdateOne) SetJimokCd(s string) *PermsUpdateOne {
	puo.mutation.SetJimokCd(s)
	return puo
}

// SetNillableJimokCd sets the "jimok_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJimokCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJimokCd(*s)
	}
	return puo
}

// ClearJimokCd clears the value of the "jimok_cd" field.
func (puo *PermsUpdateOne) ClearJimokCd() *PermsUpdateOne {
	puo.mutation.ClearJimokCd()
	return puo
}

// SetJimokCdNm sets the "jimok_cd_nm" field.
func (puo *PermsUpdateOne) SetJimokCdNm(s string) *PermsUpdateOne {
	puo.mutation.SetJimokCdNm(s)
	return puo
}

// SetNillableJimokCdNm sets the "jimok_cd_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJimokCdNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJimokCdNm(*s)
	}
	return puo
}

// ClearJimokCdNm clears the value of the "jimok_cd_nm" field.
func (puo *PermsUpdateOne) ClearJimokCdNm() *PermsUpdateOne {
	puo.mutation.ClearJimokCdNm()
	return puo
}

// SetJiyukCd sets the "jiyuk_cd" field.
func (puo *PermsUpdateOne) SetJiyukCd(s string) *PermsUpdateOne {
	puo.mutation.SetJiyukCd(s)
	return puo
}

// SetNillableJiyukCd sets the "jiyuk_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJiyukCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJiyukCd(*s)
	}
	return puo
}

// ClearJiyukCd clears the value of the "jiyuk_cd" field.
func (puo *PermsUpdateOne) ClearJiyukCd() *PermsUpdateOne {
	puo.mutation.ClearJiyukCd()
	return puo
}

// SetJiyukCdNm sets the "jiyuk_cd_nm" field.
func (puo *PermsUpdateOne) SetJiyukCdNm(s string) *PermsUpdateOne {
	puo.mutation.SetJiyukCdNm(s)
	return puo
}

// SetNillableJiyukCdNm sets the "jiyuk_cd_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJiyukCdNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJiyukCdNm(*s)
	}
	return puo
}

// ClearJiyukCdNm clears the value of the "jiyuk_cd_nm" field.
func (puo *PermsUpdateOne) ClearJiyukCdNm() *PermsUpdateOne {
	puo.mutation.ClearJiyukCdNm()
	return puo
}

// SetJiguCd sets the "jigu_cd" field.
func (puo *PermsUpdateOne) SetJiguCd(s string) *PermsUpdateOne {
	puo.mutation.SetJiguCd(s)
	return puo
}

// SetNillableJiguCd sets the "jigu_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJiguCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJiguCd(*s)
	}
	return puo
}

// ClearJiguCd clears the value of the "jigu_cd" field.
func (puo *PermsUpdateOne) ClearJiguCd() *PermsUpdateOne {
	puo.mutation.ClearJiguCd()
	return puo
}

// SetJiguCdNm sets the "jigu_cd_nm" field.
func (puo *PermsUpdateOne) SetJiguCdNm(s string) *PermsUpdateOne {
	puo.mutation.SetJiguCdNm(s)
	return puo
}

// SetNillableJiguCdNm sets the "jigu_cd_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJiguCdNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJiguCdNm(*s)
	}
	return puo
}

// ClearJiguCdNm clears the value of the "jigu_cd_nm" field.
func (puo *PermsUpdateOne) ClearJiguCdNm() *PermsUpdateOne {
	puo.mutation.ClearJiguCdNm()
	return puo
}

// SetArchGBCdNm sets the "arch_gb_cd_nm" field.
func (puo *PermsUpdateOne) SetArchGBCdNm(s string) *PermsUpdateOne {
	puo.mutation.SetArchGBCdNm(s)
	return puo
}

// SetNillableArchGBCdNm sets the "arch_gb_cd_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableArchGBCdNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetArchGBCdNm(*s)
	}
	return puo
}

// ClearArchGBCdNm clears the value of the "arch_gb_cd_nm" field.
func (puo *PermsUpdateOne) ClearArchGBCdNm() *PermsUpdateOne {
	puo.mutation.ClearArchGBCdNm()
	return puo
}

// SetArchGBCd sets the "arch_gb_cd" field.
func (puo *PermsUpdateOne) SetArchGBCd(s string) *PermsUpdateOne {
	puo.mutation.SetArchGBCd(s)
	return puo
}

// SetNillableArchGBCd sets the "arch_gb_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableArchGBCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetArchGBCd(*s)
	}
	return puo
}

// ClearArchGBCd clears the value of the "arch_gb_cd" field.
func (puo *PermsUpdateOne) ClearArchGBCd() *PermsUpdateOne {
	puo.mutation.ClearArchGBCd()
	return puo
}

// SetPlatArea sets the "plat_area" field.
func (puo *PermsUpdateOne) SetPlatArea(u uint32) *PermsUpdateOne {
	puo.mutation.ResetPlatArea()
	puo.mutation.SetPlatArea(u)
	return puo
}

// SetNillablePlatArea sets the "plat_area" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillablePlatArea(u *uint32) *PermsUpdateOne {
	if u != nil {
		puo.SetPlatArea(*u)
	}
	return puo
}

// AddPlatArea adds u to the "plat_area" field.
func (puo *PermsUpdateOne) AddPlatArea(u int32) *PermsUpdateOne {
	puo.mutation.AddPlatArea(u)
	return puo
}

// ClearPlatArea clears the value of the "plat_area" field.
func (puo *PermsUpdateOne) ClearPlatArea() *PermsUpdateOne {
	puo.mutation.ClearPlatArea()
	return puo
}

// SetArchArea sets the "arch_area" field.
func (puo *PermsUpdateOne) SetArchArea(u uint32) *PermsUpdateOne {
	puo.mutation.ResetArchArea()
	puo.mutation.SetArchArea(u)
	return puo
}

// SetNillableArchArea sets the "arch_area" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableArchArea(u *uint32) *PermsUpdateOne {
	if u != nil {
		puo.SetArchArea(*u)
	}
	return puo
}

// AddArchArea adds u to the "arch_area" field.
func (puo *PermsUpdateOne) AddArchArea(u int32) *PermsUpdateOne {
	puo.mutation.AddArchArea(u)
	return puo
}

// ClearArchArea clears the value of the "arch_area" field.
func (puo *PermsUpdateOne) ClearArchArea() *PermsUpdateOne {
	puo.mutation.ClearArchArea()
	return puo
}

// SetBcRat sets the "bc_rat" field.
func (puo *PermsUpdateOne) SetBcRat(u uint16) *PermsUpdateOne {
	puo.mutation.ResetBcRat()
	puo.mutation.SetBcRat(u)
	return puo
}

// SetNillableBcRat sets the "bc_rat" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableBcRat(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetBcRat(*u)
	}
	return puo
}

// AddBcRat adds u to the "bc_rat" field.
func (puo *PermsUpdateOne) AddBcRat(u int16) *PermsUpdateOne {
	puo.mutation.AddBcRat(u)
	return puo
}

// ClearBcRat clears the value of the "bc_rat" field.
func (puo *PermsUpdateOne) ClearBcRat() *PermsUpdateOne {
	puo.mutation.ClearBcRat()
	return puo
}

// SetTotArea sets the "tot_area" field.
func (puo *PermsUpdateOne) SetTotArea(u uint32) *PermsUpdateOne {
	puo.mutation.ResetTotArea()
	puo.mutation.SetTotArea(u)
	return puo
}

// SetNillableTotArea sets the "tot_area" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableTotArea(u *uint32) *PermsUpdateOne {
	if u != nil {
		puo.SetTotArea(*u)
	}
	return puo
}

// AddTotArea adds u to the "tot_area" field.
func (puo *PermsUpdateOne) AddTotArea(u int32) *PermsUpdateOne {
	puo.mutation.AddTotArea(u)
	return puo
}

// ClearTotArea clears the value of the "tot_area" field.
func (puo *PermsUpdateOne) ClearTotArea() *PermsUpdateOne {
	puo.mutation.ClearTotArea()
	return puo
}

// SetVlRatEstmTotArea sets the "vl_rat_estm_tot_area" field.
func (puo *PermsUpdateOne) SetVlRatEstmTotArea(u uint32) *PermsUpdateOne {
	puo.mutation.ResetVlRatEstmTotArea()
	puo.mutation.SetVlRatEstmTotArea(u)
	return puo
}

// SetNillableVlRatEstmTotArea sets the "vl_rat_estm_tot_area" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableVlRatEstmTotArea(u *uint32) *PermsUpdateOne {
	if u != nil {
		puo.SetVlRatEstmTotArea(*u)
	}
	return puo
}

// AddVlRatEstmTotArea adds u to the "vl_rat_estm_tot_area" field.
func (puo *PermsUpdateOne) AddVlRatEstmTotArea(u int32) *PermsUpdateOne {
	puo.mutation.AddVlRatEstmTotArea(u)
	return puo
}

// ClearVlRatEstmTotArea clears the value of the "vl_rat_estm_tot_area" field.
func (puo *PermsUpdateOne) ClearVlRatEstmTotArea() *PermsUpdateOne {
	puo.mutation.ClearVlRatEstmTotArea()
	return puo
}

// SetVlRat sets the "vl_rat" field.
func (puo *PermsUpdateOne) SetVlRat(u uint16) *PermsUpdateOne {
	puo.mutation.ResetVlRat()
	puo.mutation.SetVlRat(u)
	return puo
}

// SetNillableVlRat sets the "vl_rat" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableVlRat(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetVlRat(*u)
	}
	return puo
}

// AddVlRat adds u to the "vl_rat" field.
func (puo *PermsUpdateOne) AddVlRat(u int16) *PermsUpdateOne {
	puo.mutation.AddVlRat(u)
	return puo
}

// ClearVlRat clears the value of the "vl_rat" field.
func (puo *PermsUpdateOne) ClearVlRat() *PermsUpdateOne {
	puo.mutation.ClearVlRat()
	return puo
}

// SetMainBldCnt sets the "main_bld_cnt" field.
func (puo *PermsUpdateOne) SetMainBldCnt(u uint16) *PermsUpdateOne {
	puo.mutation.ResetMainBldCnt()
	puo.mutation.SetMainBldCnt(u)
	return puo
}

// SetNillableMainBldCnt sets the "main_bld_cnt" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableMainBldCnt(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetMainBldCnt(*u)
	}
	return puo
}

// AddMainBldCnt adds u to the "main_bld_cnt" field.
func (puo *PermsUpdateOne) AddMainBldCnt(u int16) *PermsUpdateOne {
	puo.mutation.AddMainBldCnt(u)
	return puo
}

// ClearMainBldCnt clears the value of the "main_bld_cnt" field.
func (puo *PermsUpdateOne) ClearMainBldCnt() *PermsUpdateOne {
	puo.mutation.ClearMainBldCnt()
	return puo
}

// SetAtchBldDongCnt sets the "atch_bld_dong_cnt" field.
func (puo *PermsUpdateOne) SetAtchBldDongCnt(u uint16) *PermsUpdateOne {
	puo.mutation.ResetAtchBldDongCnt()
	puo.mutation.SetAtchBldDongCnt(u)
	return puo
}

// SetNillableAtchBldDongCnt sets the "atch_bld_dong_cnt" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableAtchBldDongCnt(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetAtchBldDongCnt(*u)
	}
	return puo
}

// AddAtchBldDongCnt adds u to the "atch_bld_dong_cnt" field.
func (puo *PermsUpdateOne) AddAtchBldDongCnt(u int16) *PermsUpdateOne {
	puo.mutation.AddAtchBldDongCnt(u)
	return puo
}

// ClearAtchBldDongCnt clears the value of the "atch_bld_dong_cnt" field.
func (puo *PermsUpdateOne) ClearAtchBldDongCnt() *PermsUpdateOne {
	puo.mutation.ClearAtchBldDongCnt()
	return puo
}

// SetMainPurpsCd sets the "main_purps_cd" field.
func (puo *PermsUpdateOne) SetMainPurpsCd(s string) *PermsUpdateOne {
	puo.mutation.SetMainPurpsCd(s)
	return puo
}

// SetNillableMainPurpsCd sets the "main_purps_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableMainPurpsCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetMainPurpsCd(*s)
	}
	return puo
}

// ClearMainPurpsCd clears the value of the "main_purps_cd" field.
func (puo *PermsUpdateOne) ClearMainPurpsCd() *PermsUpdateOne {
	puo.mutation.ClearMainPurpsCd()
	return puo
}

// SetMainPurpsCdNm sets the "main_purps_cd_nm" field.
func (puo *PermsUpdateOne) SetMainPurpsCdNm(s string) *PermsUpdateOne {
	puo.mutation.SetMainPurpsCdNm(s)
	return puo
}

// SetNillableMainPurpsCdNm sets the "main_purps_cd_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableMainPurpsCdNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetMainPurpsCdNm(*s)
	}
	return puo
}

// ClearMainPurpsCdNm clears the value of the "main_purps_cd_nm" field.
func (puo *PermsUpdateOne) ClearMainPurpsCdNm() *PermsUpdateOne {
	puo.mutation.ClearMainPurpsCdNm()
	return puo
}

// SetHhldCnt sets the "hhld_cnt" field.
func (puo *PermsUpdateOne) SetHhldCnt(u uint16) *PermsUpdateOne {
	puo.mutation.ResetHhldCnt()
	puo.mutation.SetHhldCnt(u)
	return puo
}

// SetNillableHhldCnt sets the "hhld_cnt" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableHhldCnt(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetHhldCnt(*u)
	}
	return puo
}

// AddHhldCnt adds u to the "hhld_cnt" field.
func (puo *PermsUpdateOne) AddHhldCnt(u int16) *PermsUpdateOne {
	puo.mutation.AddHhldCnt(u)
	return puo
}

// ClearHhldCnt clears the value of the "hhld_cnt" field.
func (puo *PermsUpdateOne) ClearHhldCnt() *PermsUpdateOne {
	puo.mutation.ClearHhldCnt()
	return puo
}

// SetHoCnt sets the "ho_cnt" field.
func (puo *PermsUpdateOne) SetHoCnt(u uint16) *PermsUpdateOne {
	puo.mutation.ResetHoCnt()
	puo.mutation.SetHoCnt(u)
	return puo
}

// SetNillableHoCnt sets the "ho_cnt" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableHoCnt(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetHoCnt(*u)
	}
	return puo
}

// AddHoCnt adds u to the "ho_cnt" field.
func (puo *PermsUpdateOne) AddHoCnt(u int16) *PermsUpdateOne {
	puo.mutation.AddHoCnt(u)
	return puo
}

// ClearHoCnt clears the value of the "ho_cnt" field.
func (puo *PermsUpdateOne) ClearHoCnt() *PermsUpdateOne {
	puo.mutation.ClearHoCnt()
	return puo
}

// SetFmlyCnt sets the "fmly_cnt" field.
func (puo *PermsUpdateOne) SetFmlyCnt(u uint16) *PermsUpdateOne {
	puo.mutation.ResetFmlyCnt()
	puo.mutation.SetFmlyCnt(u)
	return puo
}

// SetNillableFmlyCnt sets the "fmly_cnt" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableFmlyCnt(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetFmlyCnt(*u)
	}
	return puo
}

// AddFmlyCnt adds u to the "fmly_cnt" field.
func (puo *PermsUpdateOne) AddFmlyCnt(u int16) *PermsUpdateOne {
	puo.mutation.AddFmlyCnt(u)
	return puo
}

// ClearFmlyCnt clears the value of the "fmly_cnt" field.
func (puo *PermsUpdateOne) ClearFmlyCnt() *PermsUpdateOne {
	puo.mutation.ClearFmlyCnt()
	return puo
}

// SetTotPkngCnt sets the "tot_pkng_cnt" field.
func (puo *PermsUpdateOne) SetTotPkngCnt(u uint16) *PermsUpdateOne {
	puo.mutation.ResetTotPkngCnt()
	puo.mutation.SetTotPkngCnt(u)
	return puo
}

// SetNillableTotPkngCnt sets the "tot_pkng_cnt" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableTotPkngCnt(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetTotPkngCnt(*u)
	}
	return puo
}

// AddTotPkngCnt adds u to the "tot_pkng_cnt" field.
func (puo *PermsUpdateOne) AddTotPkngCnt(u int16) *PermsUpdateOne {
	puo.mutation.AddTotPkngCnt(u)
	return puo
}

// ClearTotPkngCnt clears the value of the "tot_pkng_cnt" field.
func (puo *PermsUpdateOne) ClearTotPkngCnt() *PermsUpdateOne {
	puo.mutation.ClearTotPkngCnt()
	return puo
}

// SetStcnsSchedDay sets the "stcns_sched_day" field.
func (puo *PermsUpdateOne) SetStcnsSchedDay(s string) *PermsUpdateOne {
	puo.mutation.SetStcnsSchedDay(s)
	return puo
}

// SetNillableStcnsSchedDay sets the "stcns_sched_day" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableStcnsSchedDay(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetStcnsSchedDay(*s)
	}
	return puo
}

// ClearStcnsSchedDay clears the value of the "stcns_sched_day" field.
func (puo *PermsUpdateOne) ClearStcnsSchedDay() *PermsUpdateOne {
	puo.mutation.ClearStcnsSchedDay()
	return puo
}

// SetStcnsDelayDay sets the "stcns_delay_day" field.
func (puo *PermsUpdateOne) SetStcnsDelayDay(s string) *PermsUpdateOne {
	puo.mutation.SetStcnsDelayDay(s)
	return puo
}

// SetNillableStcnsDelayDay sets the "stcns_delay_day" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableStcnsDelayDay(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetStcnsDelayDay(*s)
	}
	return puo
}

// ClearStcnsDelayDay clears the value of the "stcns_delay_day" field.
func (puo *PermsUpdateOne) ClearStcnsDelayDay() *PermsUpdateOne {
	puo.mutation.ClearStcnsDelayDay()
	return puo
}

// SetRealStcnsDay sets the "real_stcns_day" field.
func (puo *PermsUpdateOne) SetRealStcnsDay(s string) *PermsUpdateOne {
	puo.mutation.SetRealStcnsDay(s)
	return puo
}

// SetNillableRealStcnsDay sets the "real_stcns_day" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableRealStcnsDay(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetRealStcnsDay(*s)
	}
	return puo
}

// ClearRealStcnsDay clears the value of the "real_stcns_day" field.
func (puo *PermsUpdateOne) ClearRealStcnsDay() *PermsUpdateOne {
	puo.mutation.ClearRealStcnsDay()
	return puo
}

// SetArchPmsDay sets the "arch_pms_day" field.
func (puo *PermsUpdateOne) SetArchPmsDay(s string) *PermsUpdateOne {
	puo.mutation.SetArchPmsDay(s)
	return puo
}

// SetNillableArchPmsDay sets the "arch_pms_day" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableArchPmsDay(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetArchPmsDay(*s)
	}
	return puo
}

// ClearArchPmsDay clears the value of the "arch_pms_day" field.
func (puo *PermsUpdateOne) ClearArchPmsDay() *PermsUpdateOne {
	puo.mutation.ClearArchPmsDay()
	return puo
}

// SetUseAprDay sets the "use_apr_day" field.
func (puo *PermsUpdateOne) SetUseAprDay(s string) *PermsUpdateOne {
	puo.mutation.SetUseAprDay(s)
	return puo
}

// SetNillableUseAprDay sets the "use_apr_day" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableUseAprDay(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetUseAprDay(*s)
	}
	return puo
}

// ClearUseAprDay clears the value of the "use_apr_day" field.
func (puo *PermsUpdateOne) ClearUseAprDay() *PermsUpdateOne {
	puo.mutation.ClearUseAprDay()
	return puo
}

// SetPlatPlc sets the "plat_plc" field.
func (puo *PermsUpdateOne) SetPlatPlc(s string) *PermsUpdateOne {
	puo.mutation.SetPlatPlc(s)
	return puo
}

// SetNillablePlatPlc sets the "plat_plc" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillablePlatPlc(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetPlatPlc(*s)
	}
	return puo
}

// ClearPlatPlc clears the value of the "plat_plc" field.
func (puo *PermsUpdateOne) ClearPlatPlc() *PermsUpdateOne {
	puo.mutation.ClearPlatPlc()
	return puo
}

// SetSigunguCd sets the "sigungu_cd" field.
func (puo *PermsUpdateOne) SetSigunguCd(s string) *PermsUpdateOne {
	puo.mutation.SetSigunguCd(s)
	return puo
}

// SetNillableSigunguCd sets the "sigungu_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableSigunguCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetSigunguCd(*s)
	}
	return puo
}

// ClearSigunguCd clears the value of the "sigungu_cd" field.
func (puo *PermsUpdateOne) ClearSigunguCd() *PermsUpdateOne {
	puo.mutation.ClearSigunguCd()
	return puo
}

// SetBjdongCd sets the "bjdong_cd" field.
func (puo *PermsUpdateOne) SetBjdongCd(s string) *PermsUpdateOne {
	puo.mutation.SetBjdongCd(s)
	return puo
}

// SetNillableBjdongCd sets the "bjdong_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableBjdongCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetBjdongCd(*s)
	}
	return puo
}

// ClearBjdongCd clears the value of the "bjdong_cd" field.
func (puo *PermsUpdateOne) ClearBjdongCd() *PermsUpdateOne {
	puo.mutation.ClearBjdongCd()
	return puo
}

// SetPlatGBCd sets the "plat_gb_cd" field.
func (puo *PermsUpdateOne) SetPlatGBCd(s string) *PermsUpdateOne {
	puo.mutation.SetPlatGBCd(s)
	return puo
}

// SetNillablePlatGBCd sets the "plat_gb_cd" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillablePlatGBCd(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetPlatGBCd(*s)
	}
	return puo
}

// ClearPlatGBCd clears the value of the "plat_gb_cd" field.
func (puo *PermsUpdateOne) ClearPlatGBCd() *PermsUpdateOne {
	puo.mutation.ClearPlatGBCd()
	return puo
}

// SetBun sets the "bun" field.
func (puo *PermsUpdateOne) SetBun(s string) *PermsUpdateOne {
	puo.mutation.SetBun(s)
	return puo
}

// SetNillableBun sets the "bun" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableBun(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetBun(*s)
	}
	return puo
}

// ClearBun clears the value of the "bun" field.
func (puo *PermsUpdateOne) ClearBun() *PermsUpdateOne {
	puo.mutation.ClearBun()
	return puo
}

// SetJi sets the "ji" field.
func (puo *PermsUpdateOne) SetJi(s string) *PermsUpdateOne {
	puo.mutation.SetJi(s)
	return puo
}

// SetNillableJi sets the "ji" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableJi(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetJi(*s)
	}
	return puo
}

// ClearJi clears the value of the "ji" field.
func (puo *PermsUpdateOne) ClearJi() *PermsUpdateOne {
	puo.mutation.ClearJi()
	return puo
}

// SetMgmPmsrgstPk sets the "mgm_pmsrgst_pk" field.
func (puo *PermsUpdateOne) SetMgmPmsrgstPk(s string) *PermsUpdateOne {
	puo.mutation.SetMgmPmsrgstPk(s)
	return puo
}

// SetSplotNm sets the "splot_nm" field.
func (puo *PermsUpdateOne) SetSplotNm(s string) *PermsUpdateOne {
	puo.mutation.SetSplotNm(s)
	return puo
}

// SetNillableSplotNm sets the "splot_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableSplotNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetSplotNm(*s)
	}
	return puo
}

// ClearSplotNm clears the value of the "splot_nm" field.
func (puo *PermsUpdateOne) ClearSplotNm() *PermsUpdateOne {
	puo.mutation.ClearSplotNm()
	return puo
}

// SetBlock sets the "block" field.
func (puo *PermsUpdateOne) SetBlock(s string) *PermsUpdateOne {
	puo.mutation.SetBlock(s)
	return puo
}

// SetNillableBlock sets the "block" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableBlock(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetBlock(*s)
	}
	return puo
}

// ClearBlock clears the value of the "block" field.
func (puo *PermsUpdateOne) ClearBlock() *PermsUpdateOne {
	puo.mutation.ClearBlock()
	return puo
}

// SetLot sets the "lot" field.
func (puo *PermsUpdateOne) SetLot(s string) *PermsUpdateOne {
	puo.mutation.SetLot(s)
	return puo
}

// SetNillableLot sets the "lot" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableLot(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetLot(*s)
	}
	return puo
}

// ClearLot clears the value of the "lot" field.
func (puo *PermsUpdateOne) ClearLot() *PermsUpdateOne {
	puo.mutation.ClearLot()
	return puo
}

// SetCrtnDay sets the "crtn_day" field.
func (puo *PermsUpdateOne) SetCrtnDay(s string) *PermsUpdateOne {
	puo.mutation.SetCrtnDay(s)
	return puo
}

// SetNillableCrtnDay sets the "crtn_day" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableCrtnDay(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetCrtnDay(*s)
	}
	return puo
}

// ClearCrtnDay clears the value of the "crtn_day" field.
func (puo *PermsUpdateOne) ClearCrtnDay() *PermsUpdateOne {
	puo.mutation.ClearCrtnDay()
	return puo
}

// SetRnum sets the "rnum" field.
func (puo *PermsUpdateOne) SetRnum(u uint16) *PermsUpdateOne {
	puo.mutation.ResetRnum()
	puo.mutation.SetRnum(u)
	return puo
}

// SetNillableRnum sets the "rnum" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableRnum(u *uint16) *PermsUpdateOne {
	if u != nil {
		puo.SetRnum(*u)
	}
	return puo
}

// AddRnum adds u to the "rnum" field.
func (puo *PermsUpdateOne) AddRnum(u int16) *PermsUpdateOne {
	puo.mutation.AddRnum(u)
	return puo
}

// ClearRnum clears the value of the "rnum" field.
func (puo *PermsUpdateOne) ClearRnum() *PermsUpdateOne {
	puo.mutation.ClearRnum()
	return puo
}

// SetBldNm sets the "bld_nm" field.
func (puo *PermsUpdateOne) SetBldNm(s string) *PermsUpdateOne {
	puo.mutation.SetBldNm(s)
	return puo
}

// SetNillableBldNm sets the "bld_nm" field if the given value is not nil.
func (puo *PermsUpdateOne) SetNillableBldNm(s *string) *PermsUpdateOne {
	if s != nil {
		puo.SetBldNm(*s)
	}
	return puo
}

// ClearBldNm clears the value of the "bld_nm" field.
func (puo *PermsUpdateOne) ClearBldNm() *PermsUpdateOne {
	puo.mutation.ClearBldNm()
	return puo
}

// SetUpdatedAt sets the "updated_at" field.
func (puo *PermsUpdateOne) SetUpdatedAt(t time.Time) *PermsUpdateOne {
	puo.mutation.SetUpdatedAt(t)
	return puo
}

// Mutation returns the PermsMutation object of the builder.
func (puo *PermsUpdateOne) Mutation() *PermsMutation {
	return puo.mutation
}

// Where appends a list predicates to the PermsUpdate builder.
func (puo *PermsUpdateOne) Where(ps ...predicate.Perms) *PermsUpdateOne {
	puo.mutation.Where(ps...)
	return puo
}

// Select allows selecting one or more fields (columns) of the returned entity.
// The default is selecting all fields defined in the entity schema.
func (puo *PermsUpdateOne) Select(field string, fields ...string) *PermsUpdateOne {
	puo.fields = append([]string{field}, fields...)
	return puo
}

// Save executes the query and returns the updated Perms entity.
func (puo *PermsUpdateOne) Save(ctx context.Context) (*Perms, error) {
	puo.defaults()
	return withHooks[*Perms, PermsMutation](ctx, puo.sqlSave, puo.mutation, puo.hooks)
}

// SaveX is like Save, but panics if an error occurs.
func (puo *PermsUpdateOne) SaveX(ctx context.Context) *Perms {
	node, err := puo.Save(ctx)
	if err != nil {
		panic(err)
	}
	return node
}

// Exec executes the query on the entity.
func (puo *PermsUpdateOne) Exec(ctx context.Context) error {
	_, err := puo.Save(ctx)
	return err
}

// ExecX is like Exec, but panics if an error occurs.
func (puo *PermsUpdateOne) ExecX(ctx context.Context) {
	if err := puo.Exec(ctx); err != nil {
		panic(err)
	}
}

// defaults sets the default values of the builder before save.
func (puo *PermsUpdateOne) defaults() {
	if _, ok := puo.mutation.UpdatedAt(); !ok {
		v := perms.UpdateDefaultUpdatedAt()
		puo.mutation.SetUpdatedAt(v)
	}
}

func (puo *PermsUpdateOne) sqlSave(ctx context.Context) (_node *Perms, err error) {
	_spec := sqlgraph.NewUpdateSpec(perms.Table, perms.Columns, sqlgraph.NewFieldSpec(perms.FieldID, field.TypeInt))
	id, ok := puo.mutation.ID()
	if !ok {
		return nil, &ValidationError{Name: "id", err: errors.New(`ent: missing "Perms.id" for update`)}
	}
	_spec.Node.ID.Value = id
	if fields := puo.fields; len(fields) > 0 {
		_spec.Node.Columns = make([]string, 0, len(fields))
		_spec.Node.Columns = append(_spec.Node.Columns, perms.FieldID)
		for _, f := range fields {
			if !perms.ValidColumn(f) {
				return nil, &ValidationError{Name: f, err: fmt.Errorf("ent: invalid field %q for query", f)}
			}
			if f != perms.FieldID {
				_spec.Node.Columns = append(_spec.Node.Columns, f)
			}
		}
	}
	if ps := puo.mutation.predicates; len(ps) > 0 {
		_spec.Predicate = func(selector *sql.Selector) {
			for i := range ps {
				ps[i](selector)
			}
		}
	}
	if value, ok := puo.mutation.GuyukCd(); ok {
		_spec.SetField(perms.FieldGuyukCd, field.TypeString, value)
	}
	if puo.mutation.GuyukCdCleared() {
		_spec.ClearField(perms.FieldGuyukCd, field.TypeString)
	}
	if value, ok := puo.mutation.GuyukCdNm(); ok {
		_spec.SetField(perms.FieldGuyukCdNm, field.TypeString, value)
	}
	if puo.mutation.GuyukCdNmCleared() {
		_spec.ClearField(perms.FieldGuyukCdNm, field.TypeString)
	}
	if value, ok := puo.mutation.JimokCd(); ok {
		_spec.SetField(perms.FieldJimokCd, field.TypeString, value)
	}
	if puo.mutation.JimokCdCleared() {
		_spec.ClearField(perms.FieldJimokCd, field.TypeString)
	}
	if value, ok := puo.mutation.JimokCdNm(); ok {
		_spec.SetField(perms.FieldJimokCdNm, field.TypeString, value)
	}
	if puo.mutation.JimokCdNmCleared() {
		_spec.ClearField(perms.FieldJimokCdNm, field.TypeString)
	}
	if value, ok := puo.mutation.JiyukCd(); ok {
		_spec.SetField(perms.FieldJiyukCd, field.TypeString, value)
	}
	if puo.mutation.JiyukCdCleared() {
		_spec.ClearField(perms.FieldJiyukCd, field.TypeString)
	}
	if value, ok := puo.mutation.JiyukCdNm(); ok {
		_spec.SetField(perms.FieldJiyukCdNm, field.TypeString, value)
	}
	if puo.mutation.JiyukCdNmCleared() {
		_spec.ClearField(perms.FieldJiyukCdNm, field.TypeString)
	}
	if value, ok := puo.mutation.JiguCd(); ok {
		_spec.SetField(perms.FieldJiguCd, field.TypeString, value)
	}
	if puo.mutation.JiguCdCleared() {
		_spec.ClearField(perms.FieldJiguCd, field.TypeString)
	}
	if value, ok := puo.mutation.JiguCdNm(); ok {
		_spec.SetField(perms.FieldJiguCdNm, field.TypeString, value)
	}
	if puo.mutation.JiguCdNmCleared() {
		_spec.ClearField(perms.FieldJiguCdNm, field.TypeString)
	}
	if value, ok := puo.mutation.ArchGBCdNm(); ok {
		_spec.SetField(perms.FieldArchGBCdNm, field.TypeString, value)
	}
	if puo.mutation.ArchGBCdNmCleared() {
		_spec.ClearField(perms.FieldArchGBCdNm, field.TypeString)
	}
	if value, ok := puo.mutation.ArchGBCd(); ok {
		_spec.SetField(perms.FieldArchGBCd, field.TypeString, value)
	}
	if puo.mutation.ArchGBCdCleared() {
		_spec.ClearField(perms.FieldArchGBCd, field.TypeString)
	}
	if value, ok := puo.mutation.PlatArea(); ok {
		_spec.SetField(perms.FieldPlatArea, field.TypeUint32, value)
	}
	if value, ok := puo.mutation.AddedPlatArea(); ok {
		_spec.AddField(perms.FieldPlatArea, field.TypeUint32, value)
	}
	if puo.mutation.PlatAreaCleared() {
		_spec.ClearField(perms.FieldPlatArea, field.TypeUint32)
	}
	if value, ok := puo.mutation.ArchArea(); ok {
		_spec.SetField(perms.FieldArchArea, field.TypeUint32, value)
	}
	if value, ok := puo.mutation.AddedArchArea(); ok {
		_spec.AddField(perms.FieldArchArea, field.TypeUint32, value)
	}
	if puo.mutation.ArchAreaCleared() {
		_spec.ClearField(perms.FieldArchArea, field.TypeUint32)
	}
	if value, ok := puo.mutation.BcRat(); ok {
		_spec.SetField(perms.FieldBcRat, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedBcRat(); ok {
		_spec.AddField(perms.FieldBcRat, field.TypeUint16, value)
	}
	if puo.mutation.BcRatCleared() {
		_spec.ClearField(perms.FieldBcRat, field.TypeUint16)
	}
	if value, ok := puo.mutation.TotArea(); ok {
		_spec.SetField(perms.FieldTotArea, field.TypeUint32, value)
	}
	if value, ok := puo.mutation.AddedTotArea(); ok {
		_spec.AddField(perms.FieldTotArea, field.TypeUint32, value)
	}
	if puo.mutation.TotAreaCleared() {
		_spec.ClearField(perms.FieldTotArea, field.TypeUint32)
	}
	if value, ok := puo.mutation.VlRatEstmTotArea(); ok {
		_spec.SetField(perms.FieldVlRatEstmTotArea, field.TypeUint32, value)
	}
	if value, ok := puo.mutation.AddedVlRatEstmTotArea(); ok {
		_spec.AddField(perms.FieldVlRatEstmTotArea, field.TypeUint32, value)
	}
	if puo.mutation.VlRatEstmTotAreaCleared() {
		_spec.ClearField(perms.FieldVlRatEstmTotArea, field.TypeUint32)
	}
	if value, ok := puo.mutation.VlRat(); ok {
		_spec.SetField(perms.FieldVlRat, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedVlRat(); ok {
		_spec.AddField(perms.FieldVlRat, field.TypeUint16, value)
	}
	if puo.mutation.VlRatCleared() {
		_spec.ClearField(perms.FieldVlRat, field.TypeUint16)
	}
	if value, ok := puo.mutation.MainBldCnt(); ok {
		_spec.SetField(perms.FieldMainBldCnt, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedMainBldCnt(); ok {
		_spec.AddField(perms.FieldMainBldCnt, field.TypeUint16, value)
	}
	if puo.mutation.MainBldCntCleared() {
		_spec.ClearField(perms.FieldMainBldCnt, field.TypeUint16)
	}
	if value, ok := puo.mutation.AtchBldDongCnt(); ok {
		_spec.SetField(perms.FieldAtchBldDongCnt, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedAtchBldDongCnt(); ok {
		_spec.AddField(perms.FieldAtchBldDongCnt, field.TypeUint16, value)
	}
	if puo.mutation.AtchBldDongCntCleared() {
		_spec.ClearField(perms.FieldAtchBldDongCnt, field.TypeUint16)
	}
	if value, ok := puo.mutation.MainPurpsCd(); ok {
		_spec.SetField(perms.FieldMainPurpsCd, field.TypeString, value)
	}
	if puo.mutation.MainPurpsCdCleared() {
		_spec.ClearField(perms.FieldMainPurpsCd, field.TypeString)
	}
	if value, ok := puo.mutation.MainPurpsCdNm(); ok {
		_spec.SetField(perms.FieldMainPurpsCdNm, field.TypeString, value)
	}
	if puo.mutation.MainPurpsCdNmCleared() {
		_spec.ClearField(perms.FieldMainPurpsCdNm, field.TypeString)
	}
	if value, ok := puo.mutation.HhldCnt(); ok {
		_spec.SetField(perms.FieldHhldCnt, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedHhldCnt(); ok {
		_spec.AddField(perms.FieldHhldCnt, field.TypeUint16, value)
	}
	if puo.mutation.HhldCntCleared() {
		_spec.ClearField(perms.FieldHhldCnt, field.TypeUint16)
	}
	if value, ok := puo.mutation.HoCnt(); ok {
		_spec.SetField(perms.FieldHoCnt, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedHoCnt(); ok {
		_spec.AddField(perms.FieldHoCnt, field.TypeUint16, value)
	}
	if puo.mutation.HoCntCleared() {
		_spec.ClearField(perms.FieldHoCnt, field.TypeUint16)
	}
	if value, ok := puo.mutation.FmlyCnt(); ok {
		_spec.SetField(perms.FieldFmlyCnt, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedFmlyCnt(); ok {
		_spec.AddField(perms.FieldFmlyCnt, field.TypeUint16, value)
	}
	if puo.mutation.FmlyCntCleared() {
		_spec.ClearField(perms.FieldFmlyCnt, field.TypeUint16)
	}
	if value, ok := puo.mutation.TotPkngCnt(); ok {
		_spec.SetField(perms.FieldTotPkngCnt, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedTotPkngCnt(); ok {
		_spec.AddField(perms.FieldTotPkngCnt, field.TypeUint16, value)
	}
	if puo.mutation.TotPkngCntCleared() {
		_spec.ClearField(perms.FieldTotPkngCnt, field.TypeUint16)
	}
	if value, ok := puo.mutation.StcnsSchedDay(); ok {
		_spec.SetField(perms.FieldStcnsSchedDay, field.TypeString, value)
	}
	if puo.mutation.StcnsSchedDayCleared() {
		_spec.ClearField(perms.FieldStcnsSchedDay, field.TypeString)
	}
	if value, ok := puo.mutation.StcnsDelayDay(); ok {
		_spec.SetField(perms.FieldStcnsDelayDay, field.TypeString, value)
	}
	if puo.mutation.StcnsDelayDayCleared() {
		_spec.ClearField(perms.FieldStcnsDelayDay, field.TypeString)
	}
	if value, ok := puo.mutation.RealStcnsDay(); ok {
		_spec.SetField(perms.FieldRealStcnsDay, field.TypeString, value)
	}
	if puo.mutation.RealStcnsDayCleared() {
		_spec.ClearField(perms.FieldRealStcnsDay, field.TypeString)
	}
	if value, ok := puo.mutation.ArchPmsDay(); ok {
		_spec.SetField(perms.FieldArchPmsDay, field.TypeString, value)
	}
	if puo.mutation.ArchPmsDayCleared() {
		_spec.ClearField(perms.FieldArchPmsDay, field.TypeString)
	}
	if value, ok := puo.mutation.UseAprDay(); ok {
		_spec.SetField(perms.FieldUseAprDay, field.TypeString, value)
	}
	if puo.mutation.UseAprDayCleared() {
		_spec.ClearField(perms.FieldUseAprDay, field.TypeString)
	}
	if value, ok := puo.mutation.PlatPlc(); ok {
		_spec.SetField(perms.FieldPlatPlc, field.TypeString, value)
	}
	if puo.mutation.PlatPlcCleared() {
		_spec.ClearField(perms.FieldPlatPlc, field.TypeString)
	}
	if value, ok := puo.mutation.SigunguCd(); ok {
		_spec.SetField(perms.FieldSigunguCd, field.TypeString, value)
	}
	if puo.mutation.SigunguCdCleared() {
		_spec.ClearField(perms.FieldSigunguCd, field.TypeString)
	}
	if value, ok := puo.mutation.BjdongCd(); ok {
		_spec.SetField(perms.FieldBjdongCd, field.TypeString, value)
	}
	if puo.mutation.BjdongCdCleared() {
		_spec.ClearField(perms.FieldBjdongCd, field.TypeString)
	}
	if value, ok := puo.mutation.PlatGBCd(); ok {
		_spec.SetField(perms.FieldPlatGBCd, field.TypeString, value)
	}
	if puo.mutation.PlatGBCdCleared() {
		_spec.ClearField(perms.FieldPlatGBCd, field.TypeString)
	}
	if value, ok := puo.mutation.Bun(); ok {
		_spec.SetField(perms.FieldBun, field.TypeString, value)
	}
	if puo.mutation.BunCleared() {
		_spec.ClearField(perms.FieldBun, field.TypeString)
	}
	if value, ok := puo.mutation.Ji(); ok {
		_spec.SetField(perms.FieldJi, field.TypeString, value)
	}
	if puo.mutation.JiCleared() {
		_spec.ClearField(perms.FieldJi, field.TypeString)
	}
	if value, ok := puo.mutation.MgmPmsrgstPk(); ok {
		_spec.SetField(perms.FieldMgmPmsrgstPk, field.TypeString, value)
	}
	if value, ok := puo.mutation.SplotNm(); ok {
		_spec.SetField(perms.FieldSplotNm, field.TypeString, value)
	}
	if puo.mutation.SplotNmCleared() {
		_spec.ClearField(perms.FieldSplotNm, field.TypeString)
	}
	if value, ok := puo.mutation.Block(); ok {
		_spec.SetField(perms.FieldBlock, field.TypeString, value)
	}
	if puo.mutation.BlockCleared() {
		_spec.ClearField(perms.FieldBlock, field.TypeString)
	}
	if value, ok := puo.mutation.Lot(); ok {
		_spec.SetField(perms.FieldLot, field.TypeString, value)
	}
	if puo.mutation.LotCleared() {
		_spec.ClearField(perms.FieldLot, field.TypeString)
	}
	if value, ok := puo.mutation.CrtnDay(); ok {
		_spec.SetField(perms.FieldCrtnDay, field.TypeString, value)
	}
	if puo.mutation.CrtnDayCleared() {
		_spec.ClearField(perms.FieldCrtnDay, field.TypeString)
	}
	if value, ok := puo.mutation.Rnum(); ok {
		_spec.SetField(perms.FieldRnum, field.TypeUint16, value)
	}
	if value, ok := puo.mutation.AddedRnum(); ok {
		_spec.AddField(perms.FieldRnum, field.TypeUint16, value)
	}
	if puo.mutation.RnumCleared() {
		_spec.ClearField(perms.FieldRnum, field.TypeUint16)
	}
	if value, ok := puo.mutation.BldNm(); ok {
		_spec.SetField(perms.FieldBldNm, field.TypeString, value)
	}
	if puo.mutation.BldNmCleared() {
		_spec.ClearField(perms.FieldBldNm, field.TypeString)
	}
	if value, ok := puo.mutation.UpdatedAt(); ok {
		_spec.SetField(perms.FieldUpdatedAt, field.TypeTime, value)
	}
	_node = &Perms{config: puo.config}
	_spec.Assign = _node.assignValues
	_spec.ScanValues = _node.scanValues
	if err = sqlgraph.UpdateNode(ctx, puo.driver, _spec); err != nil {
		if _, ok := err.(*sqlgraph.NotFoundError); ok {
			err = &NotFoundError{perms.Label}
		} else if sqlgraph.IsConstraintError(err) {
			err = &ConstraintError{msg: err.Error(), wrap: err}
		}
		return nil, err
	}
	puo.mutation.done = true
	return _node, nil
}
