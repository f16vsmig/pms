// Code generated by ent, DO NOT EDIT.

package jibun

import (
	"gopms/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldID, id))
}

// BjdongCd applies equality check predicate on the "bjdong_cd" field. It's identical to BjdongCdEQ.
func BjdongCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldBjdongCd, v))
}

// SigunguCd applies equality check predicate on the "sigungu_cd" field. It's identical to SigunguCdEQ.
func SigunguCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldSigunguCd, v))
}

// Bun applies equality check predicate on the "bun" field. It's identical to BunEQ.
func Bun(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldBun, v))
}

// Ji applies equality check predicate on the "ji" field. It's identical to JiEQ.
func Ji(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJi, v))
}

// GuyukCd applies equality check predicate on the "guyuk_cd" field. It's identical to GuyukCdEQ.
func GuyukCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldGuyukCd, v))
}

// GuyukCdNm applies equality check predicate on the "guyuk_cd_nm" field. It's identical to GuyukCdNmEQ.
func GuyukCdNm(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldGuyukCdNm, v))
}

// JimokCd applies equality check predicate on the "jimok_cd" field. It's identical to JimokCdEQ.
func JimokCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJimokCd, v))
}

// JimokCdNm applies equality check predicate on the "jimok_cd_nm" field. It's identical to JimokCdNmEQ.
func JimokCdNm(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJimokCdNm, v))
}

// JiyukCd applies equality check predicate on the "jiyuk_cd" field. It's identical to JiyukCdEQ.
func JiyukCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiyukCd, v))
}

// JiyukCdNm applies equality check predicate on the "jiyuk_cd_nm" field. It's identical to JiyukCdNmEQ.
func JiyukCdNm(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiyukCdNm, v))
}

// JiguCd applies equality check predicate on the "jigu_cd" field. It's identical to JiguCdEQ.
func JiguCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiguCd, v))
}

// JiguCdNm applies equality check predicate on the "jigu_cd_nm" field. It's identical to JiguCdNmEQ.
func JiguCdNm(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiguCdNm, v))
}

// PlatGBCd applies equality check predicate on the "plat_gb_cd" field. It's identical to PlatGBCdEQ.
func PlatGBCd(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldPlatGBCd, v))
}

// PlatPlc applies equality check predicate on the "plat_plc" field. It's identical to PlatPlcEQ.
func PlatPlc(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldPlatPlc, v))
}

// SplotNm applies equality check predicate on the "splot_nm" field. It's identical to SplotNmEQ.
func SplotNm(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldSplotNm, v))
}

// Block applies equality check predicate on the "block" field. It's identical to BlockEQ.
func Block(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldBlock, v))
}

// Lot applies equality check predicate on the "lot" field. It's identical to LotEQ.
func Lot(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldLot, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldUpdatedAt, v))
}

// BjdongCdEQ applies the EQ predicate on the "bjdong_cd" field.
func BjdongCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldBjdongCd, v))
}

// BjdongCdNEQ applies the NEQ predicate on the "bjdong_cd" field.
func BjdongCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldBjdongCd, v))
}

// BjdongCdIn applies the In predicate on the "bjdong_cd" field.
func BjdongCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldBjdongCd, vs...))
}

// BjdongCdNotIn applies the NotIn predicate on the "bjdong_cd" field.
func BjdongCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldBjdongCd, vs...))
}

// BjdongCdGT applies the GT predicate on the "bjdong_cd" field.
func BjdongCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldBjdongCd, v))
}

// BjdongCdGTE applies the GTE predicate on the "bjdong_cd" field.
func BjdongCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldBjdongCd, v))
}

// BjdongCdLT applies the LT predicate on the "bjdong_cd" field.
func BjdongCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldBjdongCd, v))
}

// BjdongCdLTE applies the LTE predicate on the "bjdong_cd" field.
func BjdongCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldBjdongCd, v))
}

// BjdongCdContains applies the Contains predicate on the "bjdong_cd" field.
func BjdongCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldBjdongCd, v))
}

// BjdongCdHasPrefix applies the HasPrefix predicate on the "bjdong_cd" field.
func BjdongCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldBjdongCd, v))
}

// BjdongCdHasSuffix applies the HasSuffix predicate on the "bjdong_cd" field.
func BjdongCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldBjdongCd, v))
}

// BjdongCdEqualFold applies the EqualFold predicate on the "bjdong_cd" field.
func BjdongCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldBjdongCd, v))
}

// BjdongCdContainsFold applies the ContainsFold predicate on the "bjdong_cd" field.
func BjdongCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldBjdongCd, v))
}

// SigunguCdEQ applies the EQ predicate on the "sigungu_cd" field.
func SigunguCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldSigunguCd, v))
}

// SigunguCdNEQ applies the NEQ predicate on the "sigungu_cd" field.
func SigunguCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldSigunguCd, v))
}

// SigunguCdIn applies the In predicate on the "sigungu_cd" field.
func SigunguCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldSigunguCd, vs...))
}

// SigunguCdNotIn applies the NotIn predicate on the "sigungu_cd" field.
func SigunguCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldSigunguCd, vs...))
}

// SigunguCdGT applies the GT predicate on the "sigungu_cd" field.
func SigunguCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldSigunguCd, v))
}

// SigunguCdGTE applies the GTE predicate on the "sigungu_cd" field.
func SigunguCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldSigunguCd, v))
}

// SigunguCdLT applies the LT predicate on the "sigungu_cd" field.
func SigunguCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldSigunguCd, v))
}

// SigunguCdLTE applies the LTE predicate on the "sigungu_cd" field.
func SigunguCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldSigunguCd, v))
}

// SigunguCdContains applies the Contains predicate on the "sigungu_cd" field.
func SigunguCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldSigunguCd, v))
}

// SigunguCdHasPrefix applies the HasPrefix predicate on the "sigungu_cd" field.
func SigunguCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldSigunguCd, v))
}

// SigunguCdHasSuffix applies the HasSuffix predicate on the "sigungu_cd" field.
func SigunguCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldSigunguCd, v))
}

// SigunguCdEqualFold applies the EqualFold predicate on the "sigungu_cd" field.
func SigunguCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldSigunguCd, v))
}

// SigunguCdContainsFold applies the ContainsFold predicate on the "sigungu_cd" field.
func SigunguCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldSigunguCd, v))
}

// BunEQ applies the EQ predicate on the "bun" field.
func BunEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldBun, v))
}

// BunNEQ applies the NEQ predicate on the "bun" field.
func BunNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldBun, v))
}

// BunIn applies the In predicate on the "bun" field.
func BunIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldBun, vs...))
}

// BunNotIn applies the NotIn predicate on the "bun" field.
func BunNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldBun, vs...))
}

// BunGT applies the GT predicate on the "bun" field.
func BunGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldBun, v))
}

// BunGTE applies the GTE predicate on the "bun" field.
func BunGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldBun, v))
}

// BunLT applies the LT predicate on the "bun" field.
func BunLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldBun, v))
}

// BunLTE applies the LTE predicate on the "bun" field.
func BunLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldBun, v))
}

// BunContains applies the Contains predicate on the "bun" field.
func BunContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldBun, v))
}

// BunHasPrefix applies the HasPrefix predicate on the "bun" field.
func BunHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldBun, v))
}

// BunHasSuffix applies the HasSuffix predicate on the "bun" field.
func BunHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldBun, v))
}

// BunEqualFold applies the EqualFold predicate on the "bun" field.
func BunEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldBun, v))
}

// BunContainsFold applies the ContainsFold predicate on the "bun" field.
func BunContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldBun, v))
}

// JiEQ applies the EQ predicate on the "ji" field.
func JiEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJi, v))
}

// JiNEQ applies the NEQ predicate on the "ji" field.
func JiNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJi, v))
}

// JiIn applies the In predicate on the "ji" field.
func JiIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJi, vs...))
}

// JiNotIn applies the NotIn predicate on the "ji" field.
func JiNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJi, vs...))
}

// JiGT applies the GT predicate on the "ji" field.
func JiGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJi, v))
}

// JiGTE applies the GTE predicate on the "ji" field.
func JiGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJi, v))
}

// JiLT applies the LT predicate on the "ji" field.
func JiLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJi, v))
}

// JiLTE applies the LTE predicate on the "ji" field.
func JiLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJi, v))
}

// JiContains applies the Contains predicate on the "ji" field.
func JiContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJi, v))
}

// JiHasPrefix applies the HasPrefix predicate on the "ji" field.
func JiHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJi, v))
}

// JiHasSuffix applies the HasSuffix predicate on the "ji" field.
func JiHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJi, v))
}

// JiEqualFold applies the EqualFold predicate on the "ji" field.
func JiEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJi, v))
}

// JiContainsFold applies the ContainsFold predicate on the "ji" field.
func JiContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJi, v))
}

// GuyukCdEQ applies the EQ predicate on the "guyuk_cd" field.
func GuyukCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldGuyukCd, v))
}

// GuyukCdNEQ applies the NEQ predicate on the "guyuk_cd" field.
func GuyukCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldGuyukCd, v))
}

// GuyukCdIn applies the In predicate on the "guyuk_cd" field.
func GuyukCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldGuyukCd, vs...))
}

// GuyukCdNotIn applies the NotIn predicate on the "guyuk_cd" field.
func GuyukCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldGuyukCd, vs...))
}

// GuyukCdGT applies the GT predicate on the "guyuk_cd" field.
func GuyukCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldGuyukCd, v))
}

// GuyukCdGTE applies the GTE predicate on the "guyuk_cd" field.
func GuyukCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldGuyukCd, v))
}

// GuyukCdLT applies the LT predicate on the "guyuk_cd" field.
func GuyukCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldGuyukCd, v))
}

// GuyukCdLTE applies the LTE predicate on the "guyuk_cd" field.
func GuyukCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldGuyukCd, v))
}

// GuyukCdContains applies the Contains predicate on the "guyuk_cd" field.
func GuyukCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldGuyukCd, v))
}

// GuyukCdHasPrefix applies the HasPrefix predicate on the "guyuk_cd" field.
func GuyukCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldGuyukCd, v))
}

// GuyukCdHasSuffix applies the HasSuffix predicate on the "guyuk_cd" field.
func GuyukCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldGuyukCd, v))
}

// GuyukCdEqualFold applies the EqualFold predicate on the "guyuk_cd" field.
func GuyukCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldGuyukCd, v))
}

// GuyukCdContainsFold applies the ContainsFold predicate on the "guyuk_cd" field.
func GuyukCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldGuyukCd, v))
}

// GuyukCdNmEQ applies the EQ predicate on the "guyuk_cd_nm" field.
func GuyukCdNmEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldGuyukCdNm, v))
}

// GuyukCdNmNEQ applies the NEQ predicate on the "guyuk_cd_nm" field.
func GuyukCdNmNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldGuyukCdNm, v))
}

// GuyukCdNmIn applies the In predicate on the "guyuk_cd_nm" field.
func GuyukCdNmIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldGuyukCdNm, vs...))
}

// GuyukCdNmNotIn applies the NotIn predicate on the "guyuk_cd_nm" field.
func GuyukCdNmNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldGuyukCdNm, vs...))
}

// GuyukCdNmGT applies the GT predicate on the "guyuk_cd_nm" field.
func GuyukCdNmGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldGuyukCdNm, v))
}

// GuyukCdNmGTE applies the GTE predicate on the "guyuk_cd_nm" field.
func GuyukCdNmGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldGuyukCdNm, v))
}

// GuyukCdNmLT applies the LT predicate on the "guyuk_cd_nm" field.
func GuyukCdNmLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldGuyukCdNm, v))
}

// GuyukCdNmLTE applies the LTE predicate on the "guyuk_cd_nm" field.
func GuyukCdNmLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldGuyukCdNm, v))
}

// GuyukCdNmContains applies the Contains predicate on the "guyuk_cd_nm" field.
func GuyukCdNmContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldGuyukCdNm, v))
}

// GuyukCdNmHasPrefix applies the HasPrefix predicate on the "guyuk_cd_nm" field.
func GuyukCdNmHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldGuyukCdNm, v))
}

// GuyukCdNmHasSuffix applies the HasSuffix predicate on the "guyuk_cd_nm" field.
func GuyukCdNmHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldGuyukCdNm, v))
}

// GuyukCdNmEqualFold applies the EqualFold predicate on the "guyuk_cd_nm" field.
func GuyukCdNmEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldGuyukCdNm, v))
}

// GuyukCdNmContainsFold applies the ContainsFold predicate on the "guyuk_cd_nm" field.
func GuyukCdNmContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldGuyukCdNm, v))
}

// JimokCdEQ applies the EQ predicate on the "jimok_cd" field.
func JimokCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJimokCd, v))
}

// JimokCdNEQ applies the NEQ predicate on the "jimok_cd" field.
func JimokCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJimokCd, v))
}

// JimokCdIn applies the In predicate on the "jimok_cd" field.
func JimokCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJimokCd, vs...))
}

// JimokCdNotIn applies the NotIn predicate on the "jimok_cd" field.
func JimokCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJimokCd, vs...))
}

// JimokCdGT applies the GT predicate on the "jimok_cd" field.
func JimokCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJimokCd, v))
}

// JimokCdGTE applies the GTE predicate on the "jimok_cd" field.
func JimokCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJimokCd, v))
}

// JimokCdLT applies the LT predicate on the "jimok_cd" field.
func JimokCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJimokCd, v))
}

// JimokCdLTE applies the LTE predicate on the "jimok_cd" field.
func JimokCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJimokCd, v))
}

// JimokCdContains applies the Contains predicate on the "jimok_cd" field.
func JimokCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJimokCd, v))
}

// JimokCdHasPrefix applies the HasPrefix predicate on the "jimok_cd" field.
func JimokCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJimokCd, v))
}

// JimokCdHasSuffix applies the HasSuffix predicate on the "jimok_cd" field.
func JimokCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJimokCd, v))
}

// JimokCdEqualFold applies the EqualFold predicate on the "jimok_cd" field.
func JimokCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJimokCd, v))
}

// JimokCdContainsFold applies the ContainsFold predicate on the "jimok_cd" field.
func JimokCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJimokCd, v))
}

// JimokCdNmEQ applies the EQ predicate on the "jimok_cd_nm" field.
func JimokCdNmEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJimokCdNm, v))
}

// JimokCdNmNEQ applies the NEQ predicate on the "jimok_cd_nm" field.
func JimokCdNmNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJimokCdNm, v))
}

// JimokCdNmIn applies the In predicate on the "jimok_cd_nm" field.
func JimokCdNmIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJimokCdNm, vs...))
}

// JimokCdNmNotIn applies the NotIn predicate on the "jimok_cd_nm" field.
func JimokCdNmNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJimokCdNm, vs...))
}

// JimokCdNmGT applies the GT predicate on the "jimok_cd_nm" field.
func JimokCdNmGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJimokCdNm, v))
}

// JimokCdNmGTE applies the GTE predicate on the "jimok_cd_nm" field.
func JimokCdNmGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJimokCdNm, v))
}

// JimokCdNmLT applies the LT predicate on the "jimok_cd_nm" field.
func JimokCdNmLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJimokCdNm, v))
}

// JimokCdNmLTE applies the LTE predicate on the "jimok_cd_nm" field.
func JimokCdNmLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJimokCdNm, v))
}

// JimokCdNmContains applies the Contains predicate on the "jimok_cd_nm" field.
func JimokCdNmContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJimokCdNm, v))
}

// JimokCdNmHasPrefix applies the HasPrefix predicate on the "jimok_cd_nm" field.
func JimokCdNmHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJimokCdNm, v))
}

// JimokCdNmHasSuffix applies the HasSuffix predicate on the "jimok_cd_nm" field.
func JimokCdNmHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJimokCdNm, v))
}

// JimokCdNmEqualFold applies the EqualFold predicate on the "jimok_cd_nm" field.
func JimokCdNmEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJimokCdNm, v))
}

// JimokCdNmContainsFold applies the ContainsFold predicate on the "jimok_cd_nm" field.
func JimokCdNmContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJimokCdNm, v))
}

// JiyukCdEQ applies the EQ predicate on the "jiyuk_cd" field.
func JiyukCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiyukCd, v))
}

// JiyukCdNEQ applies the NEQ predicate on the "jiyuk_cd" field.
func JiyukCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJiyukCd, v))
}

// JiyukCdIn applies the In predicate on the "jiyuk_cd" field.
func JiyukCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJiyukCd, vs...))
}

// JiyukCdNotIn applies the NotIn predicate on the "jiyuk_cd" field.
func JiyukCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJiyukCd, vs...))
}

// JiyukCdGT applies the GT predicate on the "jiyuk_cd" field.
func JiyukCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJiyukCd, v))
}

// JiyukCdGTE applies the GTE predicate on the "jiyuk_cd" field.
func JiyukCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJiyukCd, v))
}

// JiyukCdLT applies the LT predicate on the "jiyuk_cd" field.
func JiyukCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJiyukCd, v))
}

// JiyukCdLTE applies the LTE predicate on the "jiyuk_cd" field.
func JiyukCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJiyukCd, v))
}

// JiyukCdContains applies the Contains predicate on the "jiyuk_cd" field.
func JiyukCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJiyukCd, v))
}

// JiyukCdHasPrefix applies the HasPrefix predicate on the "jiyuk_cd" field.
func JiyukCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJiyukCd, v))
}

// JiyukCdHasSuffix applies the HasSuffix predicate on the "jiyuk_cd" field.
func JiyukCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJiyukCd, v))
}

// JiyukCdEqualFold applies the EqualFold predicate on the "jiyuk_cd" field.
func JiyukCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJiyukCd, v))
}

// JiyukCdContainsFold applies the ContainsFold predicate on the "jiyuk_cd" field.
func JiyukCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJiyukCd, v))
}

// JiyukCdNmEQ applies the EQ predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiyukCdNm, v))
}

// JiyukCdNmNEQ applies the NEQ predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJiyukCdNm, v))
}

// JiyukCdNmIn applies the In predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJiyukCdNm, vs...))
}

// JiyukCdNmNotIn applies the NotIn predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJiyukCdNm, vs...))
}

// JiyukCdNmGT applies the GT predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJiyukCdNm, v))
}

// JiyukCdNmGTE applies the GTE predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJiyukCdNm, v))
}

// JiyukCdNmLT applies the LT predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJiyukCdNm, v))
}

// JiyukCdNmLTE applies the LTE predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJiyukCdNm, v))
}

// JiyukCdNmContains applies the Contains predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJiyukCdNm, v))
}

// JiyukCdNmHasPrefix applies the HasPrefix predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJiyukCdNm, v))
}

// JiyukCdNmHasSuffix applies the HasSuffix predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJiyukCdNm, v))
}

// JiyukCdNmEqualFold applies the EqualFold predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJiyukCdNm, v))
}

// JiyukCdNmContainsFold applies the ContainsFold predicate on the "jiyuk_cd_nm" field.
func JiyukCdNmContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJiyukCdNm, v))
}

// JiguCdEQ applies the EQ predicate on the "jigu_cd" field.
func JiguCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiguCd, v))
}

// JiguCdNEQ applies the NEQ predicate on the "jigu_cd" field.
func JiguCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJiguCd, v))
}

// JiguCdIn applies the In predicate on the "jigu_cd" field.
func JiguCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJiguCd, vs...))
}

// JiguCdNotIn applies the NotIn predicate on the "jigu_cd" field.
func JiguCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJiguCd, vs...))
}

// JiguCdGT applies the GT predicate on the "jigu_cd" field.
func JiguCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJiguCd, v))
}

// JiguCdGTE applies the GTE predicate on the "jigu_cd" field.
func JiguCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJiguCd, v))
}

// JiguCdLT applies the LT predicate on the "jigu_cd" field.
func JiguCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJiguCd, v))
}

// JiguCdLTE applies the LTE predicate on the "jigu_cd" field.
func JiguCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJiguCd, v))
}

// JiguCdContains applies the Contains predicate on the "jigu_cd" field.
func JiguCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJiguCd, v))
}

// JiguCdHasPrefix applies the HasPrefix predicate on the "jigu_cd" field.
func JiguCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJiguCd, v))
}

// JiguCdHasSuffix applies the HasSuffix predicate on the "jigu_cd" field.
func JiguCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJiguCd, v))
}

// JiguCdEqualFold applies the EqualFold predicate on the "jigu_cd" field.
func JiguCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJiguCd, v))
}

// JiguCdContainsFold applies the ContainsFold predicate on the "jigu_cd" field.
func JiguCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJiguCd, v))
}

// JiguCdNmEQ applies the EQ predicate on the "jigu_cd_nm" field.
func JiguCdNmEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldJiguCdNm, v))
}

// JiguCdNmNEQ applies the NEQ predicate on the "jigu_cd_nm" field.
func JiguCdNmNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldJiguCdNm, v))
}

// JiguCdNmIn applies the In predicate on the "jigu_cd_nm" field.
func JiguCdNmIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldJiguCdNm, vs...))
}

// JiguCdNmNotIn applies the NotIn predicate on the "jigu_cd_nm" field.
func JiguCdNmNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldJiguCdNm, vs...))
}

// JiguCdNmGT applies the GT predicate on the "jigu_cd_nm" field.
func JiguCdNmGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldJiguCdNm, v))
}

// JiguCdNmGTE applies the GTE predicate on the "jigu_cd_nm" field.
func JiguCdNmGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldJiguCdNm, v))
}

// JiguCdNmLT applies the LT predicate on the "jigu_cd_nm" field.
func JiguCdNmLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldJiguCdNm, v))
}

// JiguCdNmLTE applies the LTE predicate on the "jigu_cd_nm" field.
func JiguCdNmLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldJiguCdNm, v))
}

// JiguCdNmContains applies the Contains predicate on the "jigu_cd_nm" field.
func JiguCdNmContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldJiguCdNm, v))
}

// JiguCdNmHasPrefix applies the HasPrefix predicate on the "jigu_cd_nm" field.
func JiguCdNmHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldJiguCdNm, v))
}

// JiguCdNmHasSuffix applies the HasSuffix predicate on the "jigu_cd_nm" field.
func JiguCdNmHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldJiguCdNm, v))
}

// JiguCdNmEqualFold applies the EqualFold predicate on the "jigu_cd_nm" field.
func JiguCdNmEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldJiguCdNm, v))
}

// JiguCdNmContainsFold applies the ContainsFold predicate on the "jigu_cd_nm" field.
func JiguCdNmContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldJiguCdNm, v))
}

// PlatGBCdEQ applies the EQ predicate on the "plat_gb_cd" field.
func PlatGBCdEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldPlatGBCd, v))
}

// PlatGBCdNEQ applies the NEQ predicate on the "plat_gb_cd" field.
func PlatGBCdNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldPlatGBCd, v))
}

// PlatGBCdIn applies the In predicate on the "plat_gb_cd" field.
func PlatGBCdIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldPlatGBCd, vs...))
}

// PlatGBCdNotIn applies the NotIn predicate on the "plat_gb_cd" field.
func PlatGBCdNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldPlatGBCd, vs...))
}

// PlatGBCdGT applies the GT predicate on the "plat_gb_cd" field.
func PlatGBCdGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldPlatGBCd, v))
}

// PlatGBCdGTE applies the GTE predicate on the "plat_gb_cd" field.
func PlatGBCdGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldPlatGBCd, v))
}

// PlatGBCdLT applies the LT predicate on the "plat_gb_cd" field.
func PlatGBCdLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldPlatGBCd, v))
}

// PlatGBCdLTE applies the LTE predicate on the "plat_gb_cd" field.
func PlatGBCdLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldPlatGBCd, v))
}

// PlatGBCdContains applies the Contains predicate on the "plat_gb_cd" field.
func PlatGBCdContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldPlatGBCd, v))
}

// PlatGBCdHasPrefix applies the HasPrefix predicate on the "plat_gb_cd" field.
func PlatGBCdHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldPlatGBCd, v))
}

// PlatGBCdHasSuffix applies the HasSuffix predicate on the "plat_gb_cd" field.
func PlatGBCdHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldPlatGBCd, v))
}

// PlatGBCdEqualFold applies the EqualFold predicate on the "plat_gb_cd" field.
func PlatGBCdEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldPlatGBCd, v))
}

// PlatGBCdContainsFold applies the ContainsFold predicate on the "plat_gb_cd" field.
func PlatGBCdContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldPlatGBCd, v))
}

// PlatPlcEQ applies the EQ predicate on the "plat_plc" field.
func PlatPlcEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldPlatPlc, v))
}

// PlatPlcNEQ applies the NEQ predicate on the "plat_plc" field.
func PlatPlcNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldPlatPlc, v))
}

// PlatPlcIn applies the In predicate on the "plat_plc" field.
func PlatPlcIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldPlatPlc, vs...))
}

// PlatPlcNotIn applies the NotIn predicate on the "plat_plc" field.
func PlatPlcNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldPlatPlc, vs...))
}

// PlatPlcGT applies the GT predicate on the "plat_plc" field.
func PlatPlcGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldPlatPlc, v))
}

// PlatPlcGTE applies the GTE predicate on the "plat_plc" field.
func PlatPlcGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldPlatPlc, v))
}

// PlatPlcLT applies the LT predicate on the "plat_plc" field.
func PlatPlcLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldPlatPlc, v))
}

// PlatPlcLTE applies the LTE predicate on the "plat_plc" field.
func PlatPlcLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldPlatPlc, v))
}

// PlatPlcContains applies the Contains predicate on the "plat_plc" field.
func PlatPlcContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldPlatPlc, v))
}

// PlatPlcHasPrefix applies the HasPrefix predicate on the "plat_plc" field.
func PlatPlcHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldPlatPlc, v))
}

// PlatPlcHasSuffix applies the HasSuffix predicate on the "plat_plc" field.
func PlatPlcHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldPlatPlc, v))
}

// PlatPlcEqualFold applies the EqualFold predicate on the "plat_plc" field.
func PlatPlcEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldPlatPlc, v))
}

// PlatPlcContainsFold applies the ContainsFold predicate on the "plat_plc" field.
func PlatPlcContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldPlatPlc, v))
}

// SplotNmEQ applies the EQ predicate on the "splot_nm" field.
func SplotNmEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldSplotNm, v))
}

// SplotNmNEQ applies the NEQ predicate on the "splot_nm" field.
func SplotNmNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldSplotNm, v))
}

// SplotNmIn applies the In predicate on the "splot_nm" field.
func SplotNmIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldSplotNm, vs...))
}

// SplotNmNotIn applies the NotIn predicate on the "splot_nm" field.
func SplotNmNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldSplotNm, vs...))
}

// SplotNmGT applies the GT predicate on the "splot_nm" field.
func SplotNmGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldSplotNm, v))
}

// SplotNmGTE applies the GTE predicate on the "splot_nm" field.
func SplotNmGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldSplotNm, v))
}

// SplotNmLT applies the LT predicate on the "splot_nm" field.
func SplotNmLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldSplotNm, v))
}

// SplotNmLTE applies the LTE predicate on the "splot_nm" field.
func SplotNmLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldSplotNm, v))
}

// SplotNmContains applies the Contains predicate on the "splot_nm" field.
func SplotNmContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldSplotNm, v))
}

// SplotNmHasPrefix applies the HasPrefix predicate on the "splot_nm" field.
func SplotNmHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldSplotNm, v))
}

// SplotNmHasSuffix applies the HasSuffix predicate on the "splot_nm" field.
func SplotNmHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldSplotNm, v))
}

// SplotNmEqualFold applies the EqualFold predicate on the "splot_nm" field.
func SplotNmEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldSplotNm, v))
}

// SplotNmContainsFold applies the ContainsFold predicate on the "splot_nm" field.
func SplotNmContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldSplotNm, v))
}

// BlockEQ applies the EQ predicate on the "block" field.
func BlockEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldBlock, v))
}

// BlockNEQ applies the NEQ predicate on the "block" field.
func BlockNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldBlock, v))
}

// BlockIn applies the In predicate on the "block" field.
func BlockIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldBlock, vs...))
}

// BlockNotIn applies the NotIn predicate on the "block" field.
func BlockNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldBlock, vs...))
}

// BlockGT applies the GT predicate on the "block" field.
func BlockGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldBlock, v))
}

// BlockGTE applies the GTE predicate on the "block" field.
func BlockGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldBlock, v))
}

// BlockLT applies the LT predicate on the "block" field.
func BlockLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldBlock, v))
}

// BlockLTE applies the LTE predicate on the "block" field.
func BlockLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldBlock, v))
}

// BlockContains applies the Contains predicate on the "block" field.
func BlockContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldBlock, v))
}

// BlockHasPrefix applies the HasPrefix predicate on the "block" field.
func BlockHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldBlock, v))
}

// BlockHasSuffix applies the HasSuffix predicate on the "block" field.
func BlockHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldBlock, v))
}

// BlockEqualFold applies the EqualFold predicate on the "block" field.
func BlockEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldBlock, v))
}

// BlockContainsFold applies the ContainsFold predicate on the "block" field.
func BlockContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldBlock, v))
}

// LotEQ applies the EQ predicate on the "lot" field.
func LotEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldLot, v))
}

// LotNEQ applies the NEQ predicate on the "lot" field.
func LotNEQ(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldLot, v))
}

// LotIn applies the In predicate on the "lot" field.
func LotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldLot, vs...))
}

// LotNotIn applies the NotIn predicate on the "lot" field.
func LotNotIn(vs ...string) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldLot, vs...))
}

// LotGT applies the GT predicate on the "lot" field.
func LotGT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldLot, v))
}

// LotGTE applies the GTE predicate on the "lot" field.
func LotGTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldLot, v))
}

// LotLT applies the LT predicate on the "lot" field.
func LotLT(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldLot, v))
}

// LotLTE applies the LTE predicate on the "lot" field.
func LotLTE(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldLot, v))
}

// LotContains applies the Contains predicate on the "lot" field.
func LotContains(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContains(FieldLot, v))
}

// LotHasPrefix applies the HasPrefix predicate on the "lot" field.
func LotHasPrefix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasPrefix(FieldLot, v))
}

// LotHasSuffix applies the HasSuffix predicate on the "lot" field.
func LotHasSuffix(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldHasSuffix(FieldLot, v))
}

// LotEqualFold applies the EqualFold predicate on the "lot" field.
func LotEqualFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldEqualFold(FieldLot, v))
}

// LotContainsFold applies the ContainsFold predicate on the "lot" field.
func LotContainsFold(v string) predicate.Jibun {
	return predicate.Jibun(sql.FieldContainsFold(FieldLot, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Jibun {
	return predicate.Jibun(sql.FieldLTE(FieldUpdatedAt, v))
}

// HasDemol applies the HasEdge predicate on the "demol" edge.
func HasDemol() predicate.Jibun {
	return predicate.Jibun(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, DemolTable, DemolColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasDemolWith applies the HasEdge predicate on the "demol" edge with a given conditions (other predicates).
func HasDemolWith(preds ...predicate.Demol) predicate.Jibun {
	return predicate.Jibun(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(DemolInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.O2M, false, DemolTable, DemolColumn),
		)
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Jibun) predicate.Jibun {
	return predicate.Jibun(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Jibun) predicate.Jibun {
	return predicate.Jibun(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Jibun) predicate.Jibun {
	return predicate.Jibun(func(s *sql.Selector) {
		p(s.Not())
	})
}
