// Code generated by ent, DO NOT EDIT.

package demol

import (
	"gopms/ent/predicate"
	"time"

	"entgo.io/ent/dialect/sql"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldID, id))
}

// MgmPmsrgstPk applies equality check predicate on the "mgm_pmsrgst_pk" field. It's identical to MgmPmsrgstPkEQ.
func MgmPmsrgstPk(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldMgmPmsrgstPk, v))
}

// BldNm applies equality check predicate on the "bld_nm" field. It's identical to BldNmEQ.
func BldNm(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldBldNm, v))
}

// DemolExtngGBCd applies equality check predicate on the "demol_extng_gb_cd" field. It's identical to DemolExtngGBCdEQ.
func DemolExtngGBCd(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdNm applies equality check predicate on the "demol_extng_gb_cd_nm" field. It's identical to DemolExtngGBCdNmEQ.
func DemolExtngGBCdNm(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolExtngGBCdNm, v))
}

// DemolStrtDay applies equality check predicate on the "demol_strt_day" field. It's identical to DemolStrtDayEQ.
func DemolStrtDay(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolStrtDay, v))
}

// DemolEndDay applies equality check predicate on the "demol_end_day" field. It's identical to DemolEndDayEQ.
func DemolEndDay(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolEndDay, v))
}

// DemolExtngDay applies equality check predicate on the "demol_extng_day" field. It's identical to DemolExtngDayEQ.
func DemolExtngDay(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolExtngDay, v))
}

// TotArea applies equality check predicate on the "tot_area" field. It's identical to TotAreaEQ.
func TotArea(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldTotArea, v))
}

// BldCnt applies equality check predicate on the "bld_cnt" field. It's identical to BldCntEQ.
func BldCnt(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldBldCnt, v))
}

// MainPurpsCd applies equality check predicate on the "main_purps_cd" field. It's identical to MainPurpsCdEQ.
func MainPurpsCd(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldMainPurpsCd, v))
}

// MainPurpsCdNm applies equality check predicate on the "main_purps_cd_nm" field. It's identical to MainPurpsCdNmEQ.
func MainPurpsCdNm(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldMainPurpsCdNm, v))
}

// StrctCd applies equality check predicate on the "strct_cd" field. It's identical to StrctCdEQ.
func StrctCd(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldStrctCd, v))
}

// StrctCdNm applies equality check predicate on the "strct_cd_nm" field. It's identical to StrctCdNmEQ.
func StrctCdNm(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldStrctCdNm, v))
}

// HhldCnt applies equality check predicate on the "hhld_cnt" field. It's identical to HhldCntEQ.
func HhldCnt(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldHhldCnt, v))
}

// HoCnt applies equality check predicate on the "ho_cnt" field. It's identical to HoCntEQ.
func HoCnt(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldHoCnt, v))
}

// CrtnDay applies equality check predicate on the "crtn_day" field. It's identical to CrtnDayEQ.
func CrtnDay(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldCrtnDay, v))
}

// CreatedAt applies equality check predicate on the "created_at" field. It's identical to CreatedAtEQ.
func CreatedAt(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldCreatedAt, v))
}

// UpdatedAt applies equality check predicate on the "updated_at" field. It's identical to UpdatedAtEQ.
func UpdatedAt(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldUpdatedAt, v))
}

// MgmPmsrgstPkEQ applies the EQ predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkNEQ applies the NEQ predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkIn applies the In predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldMgmPmsrgstPk, vs...))
}

// MgmPmsrgstPkNotIn applies the NotIn predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldMgmPmsrgstPk, vs...))
}

// MgmPmsrgstPkGT applies the GT predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkGTE applies the GTE predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkLT applies the LT predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkLTE applies the LTE predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkContains applies the Contains predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkHasPrefix applies the HasPrefix predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkHasSuffix applies the HasSuffix predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkEqualFold applies the EqualFold predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldMgmPmsrgstPk, v))
}

// MgmPmsrgstPkContainsFold applies the ContainsFold predicate on the "mgm_pmsrgst_pk" field.
func MgmPmsrgstPkContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldMgmPmsrgstPk, v))
}

// BldNmEQ applies the EQ predicate on the "bld_nm" field.
func BldNmEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldBldNm, v))
}

// BldNmNEQ applies the NEQ predicate on the "bld_nm" field.
func BldNmNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldBldNm, v))
}

// BldNmIn applies the In predicate on the "bld_nm" field.
func BldNmIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldBldNm, vs...))
}

// BldNmNotIn applies the NotIn predicate on the "bld_nm" field.
func BldNmNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldBldNm, vs...))
}

// BldNmGT applies the GT predicate on the "bld_nm" field.
func BldNmGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldBldNm, v))
}

// BldNmGTE applies the GTE predicate on the "bld_nm" field.
func BldNmGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldBldNm, v))
}

// BldNmLT applies the LT predicate on the "bld_nm" field.
func BldNmLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldBldNm, v))
}

// BldNmLTE applies the LTE predicate on the "bld_nm" field.
func BldNmLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldBldNm, v))
}

// BldNmContains applies the Contains predicate on the "bld_nm" field.
func BldNmContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldBldNm, v))
}

// BldNmHasPrefix applies the HasPrefix predicate on the "bld_nm" field.
func BldNmHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldBldNm, v))
}

// BldNmHasSuffix applies the HasSuffix predicate on the "bld_nm" field.
func BldNmHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldBldNm, v))
}

// BldNmIsNil applies the IsNil predicate on the "bld_nm" field.
func BldNmIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldBldNm))
}

// BldNmNotNil applies the NotNil predicate on the "bld_nm" field.
func BldNmNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldBldNm))
}

// BldNmEqualFold applies the EqualFold predicate on the "bld_nm" field.
func BldNmEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldBldNm, v))
}

// BldNmContainsFold applies the ContainsFold predicate on the "bld_nm" field.
func BldNmContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldBldNm, v))
}

// DemolExtngGBCdEQ applies the EQ predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdNEQ applies the NEQ predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdIn applies the In predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldDemolExtngGBCd, vs...))
}

// DemolExtngGBCdNotIn applies the NotIn predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldDemolExtngGBCd, vs...))
}

// DemolExtngGBCdGT applies the GT predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdGTE applies the GTE predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdLT applies the LT predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdLTE applies the LTE predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdContains applies the Contains predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdHasPrefix applies the HasPrefix predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdHasSuffix applies the HasSuffix predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdIsNil applies the IsNil predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldDemolExtngGBCd))
}

// DemolExtngGBCdNotNil applies the NotNil predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldDemolExtngGBCd))
}

// DemolExtngGBCdEqualFold applies the EqualFold predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdContainsFold applies the ContainsFold predicate on the "demol_extng_gb_cd" field.
func DemolExtngGBCdContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldDemolExtngGBCd, v))
}

// DemolExtngGBCdNmEQ applies the EQ predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmNEQ applies the NEQ predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmIn applies the In predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldDemolExtngGBCdNm, vs...))
}

// DemolExtngGBCdNmNotIn applies the NotIn predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldDemolExtngGBCdNm, vs...))
}

// DemolExtngGBCdNmGT applies the GT predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmGTE applies the GTE predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmLT applies the LT predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmLTE applies the LTE predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmContains applies the Contains predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmHasPrefix applies the HasPrefix predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmHasSuffix applies the HasSuffix predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmIsNil applies the IsNil predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldDemolExtngGBCdNm))
}

// DemolExtngGBCdNmNotNil applies the NotNil predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldDemolExtngGBCdNm))
}

// DemolExtngGBCdNmEqualFold applies the EqualFold predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldDemolExtngGBCdNm, v))
}

// DemolExtngGBCdNmContainsFold applies the ContainsFold predicate on the "demol_extng_gb_cd_nm" field.
func DemolExtngGBCdNmContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldDemolExtngGBCdNm, v))
}

// DemolStrtDayEQ applies the EQ predicate on the "demol_strt_day" field.
func DemolStrtDayEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolStrtDay, v))
}

// DemolStrtDayNEQ applies the NEQ predicate on the "demol_strt_day" field.
func DemolStrtDayNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldDemolStrtDay, v))
}

// DemolStrtDayIn applies the In predicate on the "demol_strt_day" field.
func DemolStrtDayIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldDemolStrtDay, vs...))
}

// DemolStrtDayNotIn applies the NotIn predicate on the "demol_strt_day" field.
func DemolStrtDayNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldDemolStrtDay, vs...))
}

// DemolStrtDayGT applies the GT predicate on the "demol_strt_day" field.
func DemolStrtDayGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldDemolStrtDay, v))
}

// DemolStrtDayGTE applies the GTE predicate on the "demol_strt_day" field.
func DemolStrtDayGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldDemolStrtDay, v))
}

// DemolStrtDayLT applies the LT predicate on the "demol_strt_day" field.
func DemolStrtDayLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldDemolStrtDay, v))
}

// DemolStrtDayLTE applies the LTE predicate on the "demol_strt_day" field.
func DemolStrtDayLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldDemolStrtDay, v))
}

// DemolStrtDayContains applies the Contains predicate on the "demol_strt_day" field.
func DemolStrtDayContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldDemolStrtDay, v))
}

// DemolStrtDayHasPrefix applies the HasPrefix predicate on the "demol_strt_day" field.
func DemolStrtDayHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldDemolStrtDay, v))
}

// DemolStrtDayHasSuffix applies the HasSuffix predicate on the "demol_strt_day" field.
func DemolStrtDayHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldDemolStrtDay, v))
}

// DemolStrtDayIsNil applies the IsNil predicate on the "demol_strt_day" field.
func DemolStrtDayIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldDemolStrtDay))
}

// DemolStrtDayNotNil applies the NotNil predicate on the "demol_strt_day" field.
func DemolStrtDayNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldDemolStrtDay))
}

// DemolStrtDayEqualFold applies the EqualFold predicate on the "demol_strt_day" field.
func DemolStrtDayEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldDemolStrtDay, v))
}

// DemolStrtDayContainsFold applies the ContainsFold predicate on the "demol_strt_day" field.
func DemolStrtDayContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldDemolStrtDay, v))
}

// DemolEndDayEQ applies the EQ predicate on the "demol_end_day" field.
func DemolEndDayEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolEndDay, v))
}

// DemolEndDayNEQ applies the NEQ predicate on the "demol_end_day" field.
func DemolEndDayNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldDemolEndDay, v))
}

// DemolEndDayIn applies the In predicate on the "demol_end_day" field.
func DemolEndDayIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldDemolEndDay, vs...))
}

// DemolEndDayNotIn applies the NotIn predicate on the "demol_end_day" field.
func DemolEndDayNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldDemolEndDay, vs...))
}

// DemolEndDayGT applies the GT predicate on the "demol_end_day" field.
func DemolEndDayGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldDemolEndDay, v))
}

// DemolEndDayGTE applies the GTE predicate on the "demol_end_day" field.
func DemolEndDayGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldDemolEndDay, v))
}

// DemolEndDayLT applies the LT predicate on the "demol_end_day" field.
func DemolEndDayLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldDemolEndDay, v))
}

// DemolEndDayLTE applies the LTE predicate on the "demol_end_day" field.
func DemolEndDayLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldDemolEndDay, v))
}

// DemolEndDayContains applies the Contains predicate on the "demol_end_day" field.
func DemolEndDayContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldDemolEndDay, v))
}

// DemolEndDayHasPrefix applies the HasPrefix predicate on the "demol_end_day" field.
func DemolEndDayHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldDemolEndDay, v))
}

// DemolEndDayHasSuffix applies the HasSuffix predicate on the "demol_end_day" field.
func DemolEndDayHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldDemolEndDay, v))
}

// DemolEndDayIsNil applies the IsNil predicate on the "demol_end_day" field.
func DemolEndDayIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldDemolEndDay))
}

// DemolEndDayNotNil applies the NotNil predicate on the "demol_end_day" field.
func DemolEndDayNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldDemolEndDay))
}

// DemolEndDayEqualFold applies the EqualFold predicate on the "demol_end_day" field.
func DemolEndDayEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldDemolEndDay, v))
}

// DemolEndDayContainsFold applies the ContainsFold predicate on the "demol_end_day" field.
func DemolEndDayContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldDemolEndDay, v))
}

// DemolExtngDayEQ applies the EQ predicate on the "demol_extng_day" field.
func DemolExtngDayEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldDemolExtngDay, v))
}

// DemolExtngDayNEQ applies the NEQ predicate on the "demol_extng_day" field.
func DemolExtngDayNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldDemolExtngDay, v))
}

// DemolExtngDayIn applies the In predicate on the "demol_extng_day" field.
func DemolExtngDayIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldDemolExtngDay, vs...))
}

// DemolExtngDayNotIn applies the NotIn predicate on the "demol_extng_day" field.
func DemolExtngDayNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldDemolExtngDay, vs...))
}

// DemolExtngDayGT applies the GT predicate on the "demol_extng_day" field.
func DemolExtngDayGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldDemolExtngDay, v))
}

// DemolExtngDayGTE applies the GTE predicate on the "demol_extng_day" field.
func DemolExtngDayGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldDemolExtngDay, v))
}

// DemolExtngDayLT applies the LT predicate on the "demol_extng_day" field.
func DemolExtngDayLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldDemolExtngDay, v))
}

// DemolExtngDayLTE applies the LTE predicate on the "demol_extng_day" field.
func DemolExtngDayLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldDemolExtngDay, v))
}

// DemolExtngDayContains applies the Contains predicate on the "demol_extng_day" field.
func DemolExtngDayContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldDemolExtngDay, v))
}

// DemolExtngDayHasPrefix applies the HasPrefix predicate on the "demol_extng_day" field.
func DemolExtngDayHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldDemolExtngDay, v))
}

// DemolExtngDayHasSuffix applies the HasSuffix predicate on the "demol_extng_day" field.
func DemolExtngDayHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldDemolExtngDay, v))
}

// DemolExtngDayIsNil applies the IsNil predicate on the "demol_extng_day" field.
func DemolExtngDayIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldDemolExtngDay))
}

// DemolExtngDayNotNil applies the NotNil predicate on the "demol_extng_day" field.
func DemolExtngDayNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldDemolExtngDay))
}

// DemolExtngDayEqualFold applies the EqualFold predicate on the "demol_extng_day" field.
func DemolExtngDayEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldDemolExtngDay, v))
}

// DemolExtngDayContainsFold applies the ContainsFold predicate on the "demol_extng_day" field.
func DemolExtngDayContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldDemolExtngDay, v))
}

// TotAreaEQ applies the EQ predicate on the "tot_area" field.
func TotAreaEQ(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldTotArea, v))
}

// TotAreaNEQ applies the NEQ predicate on the "tot_area" field.
func TotAreaNEQ(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldTotArea, v))
}

// TotAreaIn applies the In predicate on the "tot_area" field.
func TotAreaIn(vs ...uint32) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldTotArea, vs...))
}

// TotAreaNotIn applies the NotIn predicate on the "tot_area" field.
func TotAreaNotIn(vs ...uint32) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldTotArea, vs...))
}

// TotAreaGT applies the GT predicate on the "tot_area" field.
func TotAreaGT(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldTotArea, v))
}

// TotAreaGTE applies the GTE predicate on the "tot_area" field.
func TotAreaGTE(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldTotArea, v))
}

// TotAreaLT applies the LT predicate on the "tot_area" field.
func TotAreaLT(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldTotArea, v))
}

// TotAreaLTE applies the LTE predicate on the "tot_area" field.
func TotAreaLTE(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldTotArea, v))
}

// TotAreaIsNil applies the IsNil predicate on the "tot_area" field.
func TotAreaIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldTotArea))
}

// TotAreaNotNil applies the NotNil predicate on the "tot_area" field.
func TotAreaNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldTotArea))
}

// BldCntEQ applies the EQ predicate on the "bld_cnt" field.
func BldCntEQ(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldBldCnt, v))
}

// BldCntNEQ applies the NEQ predicate on the "bld_cnt" field.
func BldCntNEQ(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldBldCnt, v))
}

// BldCntIn applies the In predicate on the "bld_cnt" field.
func BldCntIn(vs ...uint32) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldBldCnt, vs...))
}

// BldCntNotIn applies the NotIn predicate on the "bld_cnt" field.
func BldCntNotIn(vs ...uint32) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldBldCnt, vs...))
}

// BldCntGT applies the GT predicate on the "bld_cnt" field.
func BldCntGT(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldBldCnt, v))
}

// BldCntGTE applies the GTE predicate on the "bld_cnt" field.
func BldCntGTE(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldBldCnt, v))
}

// BldCntLT applies the LT predicate on the "bld_cnt" field.
func BldCntLT(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldBldCnt, v))
}

// BldCntLTE applies the LTE predicate on the "bld_cnt" field.
func BldCntLTE(v uint32) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldBldCnt, v))
}

// BldCntIsNil applies the IsNil predicate on the "bld_cnt" field.
func BldCntIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldBldCnt))
}

// BldCntNotNil applies the NotNil predicate on the "bld_cnt" field.
func BldCntNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldBldCnt))
}

// MainPurpsCdEQ applies the EQ predicate on the "main_purps_cd" field.
func MainPurpsCdEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldMainPurpsCd, v))
}

// MainPurpsCdNEQ applies the NEQ predicate on the "main_purps_cd" field.
func MainPurpsCdNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldMainPurpsCd, v))
}

// MainPurpsCdIn applies the In predicate on the "main_purps_cd" field.
func MainPurpsCdIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldMainPurpsCd, vs...))
}

// MainPurpsCdNotIn applies the NotIn predicate on the "main_purps_cd" field.
func MainPurpsCdNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldMainPurpsCd, vs...))
}

// MainPurpsCdGT applies the GT predicate on the "main_purps_cd" field.
func MainPurpsCdGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldMainPurpsCd, v))
}

// MainPurpsCdGTE applies the GTE predicate on the "main_purps_cd" field.
func MainPurpsCdGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldMainPurpsCd, v))
}

// MainPurpsCdLT applies the LT predicate on the "main_purps_cd" field.
func MainPurpsCdLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldMainPurpsCd, v))
}

// MainPurpsCdLTE applies the LTE predicate on the "main_purps_cd" field.
func MainPurpsCdLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldMainPurpsCd, v))
}

// MainPurpsCdContains applies the Contains predicate on the "main_purps_cd" field.
func MainPurpsCdContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldMainPurpsCd, v))
}

// MainPurpsCdHasPrefix applies the HasPrefix predicate on the "main_purps_cd" field.
func MainPurpsCdHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldMainPurpsCd, v))
}

// MainPurpsCdHasSuffix applies the HasSuffix predicate on the "main_purps_cd" field.
func MainPurpsCdHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldMainPurpsCd, v))
}

// MainPurpsCdIsNil applies the IsNil predicate on the "main_purps_cd" field.
func MainPurpsCdIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldMainPurpsCd))
}

// MainPurpsCdNotNil applies the NotNil predicate on the "main_purps_cd" field.
func MainPurpsCdNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldMainPurpsCd))
}

// MainPurpsCdEqualFold applies the EqualFold predicate on the "main_purps_cd" field.
func MainPurpsCdEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldMainPurpsCd, v))
}

// MainPurpsCdContainsFold applies the ContainsFold predicate on the "main_purps_cd" field.
func MainPurpsCdContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldMainPurpsCd, v))
}

// MainPurpsCdNmEQ applies the EQ predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmNEQ applies the NEQ predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmIn applies the In predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldMainPurpsCdNm, vs...))
}

// MainPurpsCdNmNotIn applies the NotIn predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldMainPurpsCdNm, vs...))
}

// MainPurpsCdNmGT applies the GT predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmGTE applies the GTE predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmLT applies the LT predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmLTE applies the LTE predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmContains applies the Contains predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmHasPrefix applies the HasPrefix predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmHasSuffix applies the HasSuffix predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmIsNil applies the IsNil predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldMainPurpsCdNm))
}

// MainPurpsCdNmNotNil applies the NotNil predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldMainPurpsCdNm))
}

// MainPurpsCdNmEqualFold applies the EqualFold predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldMainPurpsCdNm, v))
}

// MainPurpsCdNmContainsFold applies the ContainsFold predicate on the "main_purps_cd_nm" field.
func MainPurpsCdNmContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldMainPurpsCdNm, v))
}

// StrctCdEQ applies the EQ predicate on the "strct_cd" field.
func StrctCdEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldStrctCd, v))
}

// StrctCdNEQ applies the NEQ predicate on the "strct_cd" field.
func StrctCdNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldStrctCd, v))
}

// StrctCdIn applies the In predicate on the "strct_cd" field.
func StrctCdIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldStrctCd, vs...))
}

// StrctCdNotIn applies the NotIn predicate on the "strct_cd" field.
func StrctCdNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldStrctCd, vs...))
}

// StrctCdGT applies the GT predicate on the "strct_cd" field.
func StrctCdGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldStrctCd, v))
}

// StrctCdGTE applies the GTE predicate on the "strct_cd" field.
func StrctCdGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldStrctCd, v))
}

// StrctCdLT applies the LT predicate on the "strct_cd" field.
func StrctCdLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldStrctCd, v))
}

// StrctCdLTE applies the LTE predicate on the "strct_cd" field.
func StrctCdLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldStrctCd, v))
}

// StrctCdContains applies the Contains predicate on the "strct_cd" field.
func StrctCdContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldStrctCd, v))
}

// StrctCdHasPrefix applies the HasPrefix predicate on the "strct_cd" field.
func StrctCdHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldStrctCd, v))
}

// StrctCdHasSuffix applies the HasSuffix predicate on the "strct_cd" field.
func StrctCdHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldStrctCd, v))
}

// StrctCdIsNil applies the IsNil predicate on the "strct_cd" field.
func StrctCdIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldStrctCd))
}

// StrctCdNotNil applies the NotNil predicate on the "strct_cd" field.
func StrctCdNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldStrctCd))
}

// StrctCdEqualFold applies the EqualFold predicate on the "strct_cd" field.
func StrctCdEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldStrctCd, v))
}

// StrctCdContainsFold applies the ContainsFold predicate on the "strct_cd" field.
func StrctCdContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldStrctCd, v))
}

// StrctCdNmEQ applies the EQ predicate on the "strct_cd_nm" field.
func StrctCdNmEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldStrctCdNm, v))
}

// StrctCdNmNEQ applies the NEQ predicate on the "strct_cd_nm" field.
func StrctCdNmNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldStrctCdNm, v))
}

// StrctCdNmIn applies the In predicate on the "strct_cd_nm" field.
func StrctCdNmIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldStrctCdNm, vs...))
}

// StrctCdNmNotIn applies the NotIn predicate on the "strct_cd_nm" field.
func StrctCdNmNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldStrctCdNm, vs...))
}

// StrctCdNmGT applies the GT predicate on the "strct_cd_nm" field.
func StrctCdNmGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldStrctCdNm, v))
}

// StrctCdNmGTE applies the GTE predicate on the "strct_cd_nm" field.
func StrctCdNmGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldStrctCdNm, v))
}

// StrctCdNmLT applies the LT predicate on the "strct_cd_nm" field.
func StrctCdNmLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldStrctCdNm, v))
}

// StrctCdNmLTE applies the LTE predicate on the "strct_cd_nm" field.
func StrctCdNmLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldStrctCdNm, v))
}

// StrctCdNmContains applies the Contains predicate on the "strct_cd_nm" field.
func StrctCdNmContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldStrctCdNm, v))
}

// StrctCdNmHasPrefix applies the HasPrefix predicate on the "strct_cd_nm" field.
func StrctCdNmHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldStrctCdNm, v))
}

// StrctCdNmHasSuffix applies the HasSuffix predicate on the "strct_cd_nm" field.
func StrctCdNmHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldStrctCdNm, v))
}

// StrctCdNmIsNil applies the IsNil predicate on the "strct_cd_nm" field.
func StrctCdNmIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldStrctCdNm))
}

// StrctCdNmNotNil applies the NotNil predicate on the "strct_cd_nm" field.
func StrctCdNmNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldStrctCdNm))
}

// StrctCdNmEqualFold applies the EqualFold predicate on the "strct_cd_nm" field.
func StrctCdNmEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldStrctCdNm, v))
}

// StrctCdNmContainsFold applies the ContainsFold predicate on the "strct_cd_nm" field.
func StrctCdNmContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldStrctCdNm, v))
}

// HhldCntEQ applies the EQ predicate on the "hhld_cnt" field.
func HhldCntEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldHhldCnt, v))
}

// HhldCntNEQ applies the NEQ predicate on the "hhld_cnt" field.
func HhldCntNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldHhldCnt, v))
}

// HhldCntIn applies the In predicate on the "hhld_cnt" field.
func HhldCntIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldHhldCnt, vs...))
}

// HhldCntNotIn applies the NotIn predicate on the "hhld_cnt" field.
func HhldCntNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldHhldCnt, vs...))
}

// HhldCntGT applies the GT predicate on the "hhld_cnt" field.
func HhldCntGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldHhldCnt, v))
}

// HhldCntGTE applies the GTE predicate on the "hhld_cnt" field.
func HhldCntGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldHhldCnt, v))
}

// HhldCntLT applies the LT predicate on the "hhld_cnt" field.
func HhldCntLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldHhldCnt, v))
}

// HhldCntLTE applies the LTE predicate on the "hhld_cnt" field.
func HhldCntLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldHhldCnt, v))
}

// HhldCntContains applies the Contains predicate on the "hhld_cnt" field.
func HhldCntContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldHhldCnt, v))
}

// HhldCntHasPrefix applies the HasPrefix predicate on the "hhld_cnt" field.
func HhldCntHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldHhldCnt, v))
}

// HhldCntHasSuffix applies the HasSuffix predicate on the "hhld_cnt" field.
func HhldCntHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldHhldCnt, v))
}

// HhldCntIsNil applies the IsNil predicate on the "hhld_cnt" field.
func HhldCntIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldHhldCnt))
}

// HhldCntNotNil applies the NotNil predicate on the "hhld_cnt" field.
func HhldCntNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldHhldCnt))
}

// HhldCntEqualFold applies the EqualFold predicate on the "hhld_cnt" field.
func HhldCntEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldHhldCnt, v))
}

// HhldCntContainsFold applies the ContainsFold predicate on the "hhld_cnt" field.
func HhldCntContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldHhldCnt, v))
}

// HoCntEQ applies the EQ predicate on the "ho_cnt" field.
func HoCntEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldHoCnt, v))
}

// HoCntNEQ applies the NEQ predicate on the "ho_cnt" field.
func HoCntNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldHoCnt, v))
}

// HoCntIn applies the In predicate on the "ho_cnt" field.
func HoCntIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldHoCnt, vs...))
}

// HoCntNotIn applies the NotIn predicate on the "ho_cnt" field.
func HoCntNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldHoCnt, vs...))
}

// HoCntGT applies the GT predicate on the "ho_cnt" field.
func HoCntGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldHoCnt, v))
}

// HoCntGTE applies the GTE predicate on the "ho_cnt" field.
func HoCntGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldHoCnt, v))
}

// HoCntLT applies the LT predicate on the "ho_cnt" field.
func HoCntLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldHoCnt, v))
}

// HoCntLTE applies the LTE predicate on the "ho_cnt" field.
func HoCntLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldHoCnt, v))
}

// HoCntContains applies the Contains predicate on the "ho_cnt" field.
func HoCntContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldHoCnt, v))
}

// HoCntHasPrefix applies the HasPrefix predicate on the "ho_cnt" field.
func HoCntHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldHoCnt, v))
}

// HoCntHasSuffix applies the HasSuffix predicate on the "ho_cnt" field.
func HoCntHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldHoCnt, v))
}

// HoCntIsNil applies the IsNil predicate on the "ho_cnt" field.
func HoCntIsNil() predicate.Demol {
	return predicate.Demol(sql.FieldIsNull(FieldHoCnt))
}

// HoCntNotNil applies the NotNil predicate on the "ho_cnt" field.
func HoCntNotNil() predicate.Demol {
	return predicate.Demol(sql.FieldNotNull(FieldHoCnt))
}

// HoCntEqualFold applies the EqualFold predicate on the "ho_cnt" field.
func HoCntEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldHoCnt, v))
}

// HoCntContainsFold applies the ContainsFold predicate on the "ho_cnt" field.
func HoCntContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldHoCnt, v))
}

// CrtnDayEQ applies the EQ predicate on the "crtn_day" field.
func CrtnDayEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldCrtnDay, v))
}

// CrtnDayNEQ applies the NEQ predicate on the "crtn_day" field.
func CrtnDayNEQ(v string) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldCrtnDay, v))
}

// CrtnDayIn applies the In predicate on the "crtn_day" field.
func CrtnDayIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldCrtnDay, vs...))
}

// CrtnDayNotIn applies the NotIn predicate on the "crtn_day" field.
func CrtnDayNotIn(vs ...string) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldCrtnDay, vs...))
}

// CrtnDayGT applies the GT predicate on the "crtn_day" field.
func CrtnDayGT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldCrtnDay, v))
}

// CrtnDayGTE applies the GTE predicate on the "crtn_day" field.
func CrtnDayGTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldCrtnDay, v))
}

// CrtnDayLT applies the LT predicate on the "crtn_day" field.
func CrtnDayLT(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldCrtnDay, v))
}

// CrtnDayLTE applies the LTE predicate on the "crtn_day" field.
func CrtnDayLTE(v string) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldCrtnDay, v))
}

// CrtnDayContains applies the Contains predicate on the "crtn_day" field.
func CrtnDayContains(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContains(FieldCrtnDay, v))
}

// CrtnDayHasPrefix applies the HasPrefix predicate on the "crtn_day" field.
func CrtnDayHasPrefix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasPrefix(FieldCrtnDay, v))
}

// CrtnDayHasSuffix applies the HasSuffix predicate on the "crtn_day" field.
func CrtnDayHasSuffix(v string) predicate.Demol {
	return predicate.Demol(sql.FieldHasSuffix(FieldCrtnDay, v))
}

// CrtnDayEqualFold applies the EqualFold predicate on the "crtn_day" field.
func CrtnDayEqualFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldEqualFold(FieldCrtnDay, v))
}

// CrtnDayContainsFold applies the ContainsFold predicate on the "crtn_day" field.
func CrtnDayContainsFold(v string) predicate.Demol {
	return predicate.Demol(sql.FieldContainsFold(FieldCrtnDay, v))
}

// CreatedAtEQ applies the EQ predicate on the "created_at" field.
func CreatedAtEQ(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldCreatedAt, v))
}

// CreatedAtNEQ applies the NEQ predicate on the "created_at" field.
func CreatedAtNEQ(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldCreatedAt, v))
}

// CreatedAtIn applies the In predicate on the "created_at" field.
func CreatedAtIn(vs ...time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldCreatedAt, vs...))
}

// CreatedAtNotIn applies the NotIn predicate on the "created_at" field.
func CreatedAtNotIn(vs ...time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldCreatedAt, vs...))
}

// CreatedAtGT applies the GT predicate on the "created_at" field.
func CreatedAtGT(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldCreatedAt, v))
}

// CreatedAtGTE applies the GTE predicate on the "created_at" field.
func CreatedAtGTE(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldCreatedAt, v))
}

// CreatedAtLT applies the LT predicate on the "created_at" field.
func CreatedAtLT(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldCreatedAt, v))
}

// CreatedAtLTE applies the LTE predicate on the "created_at" field.
func CreatedAtLTE(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldCreatedAt, v))
}

// UpdatedAtEQ applies the EQ predicate on the "updated_at" field.
func UpdatedAtEQ(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldEQ(FieldUpdatedAt, v))
}

// UpdatedAtNEQ applies the NEQ predicate on the "updated_at" field.
func UpdatedAtNEQ(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldNEQ(FieldUpdatedAt, v))
}

// UpdatedAtIn applies the In predicate on the "updated_at" field.
func UpdatedAtIn(vs ...time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldIn(FieldUpdatedAt, vs...))
}

// UpdatedAtNotIn applies the NotIn predicate on the "updated_at" field.
func UpdatedAtNotIn(vs ...time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldNotIn(FieldUpdatedAt, vs...))
}

// UpdatedAtGT applies the GT predicate on the "updated_at" field.
func UpdatedAtGT(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldGT(FieldUpdatedAt, v))
}

// UpdatedAtGTE applies the GTE predicate on the "updated_at" field.
func UpdatedAtGTE(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldGTE(FieldUpdatedAt, v))
}

// UpdatedAtLT applies the LT predicate on the "updated_at" field.
func UpdatedAtLT(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldLT(FieldUpdatedAt, v))
}

// UpdatedAtLTE applies the LTE predicate on the "updated_at" field.
func UpdatedAtLTE(v time.Time) predicate.Demol {
	return predicate.Demol(sql.FieldLTE(FieldUpdatedAt, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Demol) predicate.Demol {
	return predicate.Demol(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Demol) predicate.Demol {
	return predicate.Demol(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Demol) predicate.Demol {
	return predicate.Demol(func(s *sql.Selector) {
		p(s.Not())
	})
}
